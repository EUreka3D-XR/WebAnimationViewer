import{F as i}from"./index-BeBPThKX.esm.min.js";const o="iblVoxelSlabDebugVertexShader",r="attribute position: vec3f;varying vNormalizedPosition: vec3f;uniform world: mat4x4f;uniform invWorldScale: mat4x4f;uniform cameraViewMatrix: mat4x4f;uniform projection: mat4x4f;uniform viewMatrix: mat4x4f;@vertex\nfn main(input : VertexInputs)->FragmentInputs {var worldPosition: vec4f=(uniforms.world* vec4f(input.position,1.));vertexOutputs.position=uniforms.projection*uniforms.cameraViewMatrix*worldPosition;vertexOutputs.vNormalizedPosition=(uniforms.viewMatrix*uniforms.invWorldScale*worldPosition).rgb;vertexOutputs.vNormalizedPosition=vertexOutputs.vNormalizedPosition* vec3f(0.5)+ vec3f(0.5);}";i.ShadersStoreWGSL[o]||(i.ShadersStoreWGSL[o]=r);const t={name:o,shader:r};export{t as iblVoxelSlabDebugVertexShaderWGSL};
//# sourceMappingURL=iblVoxelSlabDebug.vertex-H4bogJU1.esm.min.js.map
