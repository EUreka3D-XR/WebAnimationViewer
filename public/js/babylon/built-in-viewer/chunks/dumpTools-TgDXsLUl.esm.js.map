{"version":3,"file":"dumpTools-TgDXsLUl.esm.js","sources":["../../../../../dev/core/dist/Misc/dumpTools.js"],"sourcesContent":["import { Constants } from \"../Engines/constants\";\nimport { EffectRenderer, EffectWrapper } from \"../Materials/effectRenderer\";\nimport { Tools } from \"./tools\";\nimport { Clamp } from \"../Maths/math.scalar.functions\";\nimport { EngineStore } from \"../Engines/engineStore\";\nimport { Logger } from \"./logger\";\nlet ResourcesPromise = null;\nasync function _CreateDumpResourcesAsync() {\n    // Create a compatible canvas. Prefer an HTMLCanvasElement if possible to avoid alpha issues with OffscreenCanvas + WebGL in many browsers.\n    const canvas = (EngineStore.LastCreatedEngine?.createCanvas(100, 100) ?? new OffscreenCanvas(100, 100)); // will be resized later\n    if (canvas instanceof OffscreenCanvas) {\n        Logger.Warn(\"DumpData: OffscreenCanvas will be used for dumping data. This may result in lossy alpha values.\");\n    }\n    // If WebGL via ThinEngine is not available (e.g. Native), use the BitmapRenderer.\n    // If https://github.com/whatwg/html/issues/10142 is resolved, we can migrate to just BitmapRenderer and avoid an engine dependency altogether.\n    const { ThinEngine: thinEngineClass } = await import(\"../Engines/thinEngine\");\n    if (!thinEngineClass.IsSupported) {\n        if (!canvas.getContext(\"bitmaprenderer\")) {\n            throw new Error(\"DumpData: No WebGL or bitmap rendering context available. Cannot dump data.\");\n        }\n        return { canvas };\n    }\n    const options = {\n        preserveDrawingBuffer: true,\n        depth: false,\n        stencil: false,\n        alpha: true,\n        premultipliedAlpha: false,\n        antialias: false,\n        failIfMajorPerformanceCaveat: false,\n    };\n    const engine = new thinEngineClass(canvas, false, options);\n    // remove this engine from the list of instances to avoid using it for other purposes\n    EngineStore.Instances.pop();\n    // However, make sure to dispose it when no other engines are left\n    EngineStore.OnEnginesDisposedObservable.add((e) => {\n        // guaranteed to run when no other instances are left\n        // only dispose if it's not the current engine\n        if (engine && e !== engine && !engine.isDisposed && EngineStore.Instances.length === 0) {\n            // Dump the engine and the associated resources\n            Dispose();\n        }\n    });\n    engine.getCaps().parallelShaderCompile = undefined;\n    const renderer = new EffectRenderer(engine);\n    const { passPixelShader } = await import(\"../Shaders/pass.fragment\");\n    const wrapper = new EffectWrapper({\n        engine,\n        name: passPixelShader.name,\n        fragmentShader: passPixelShader.shader,\n        samplerNames: [\"textureSampler\"],\n    });\n    return {\n        canvas: canvas,\n        dumpEngine: { engine, renderer, wrapper },\n    };\n}\nasync function _GetDumpResourcesAsync() {\n    if (!ResourcesPromise) {\n        ResourcesPromise = _CreateDumpResourcesAsync();\n    }\n    return await ResourcesPromise;\n}\n/**\n * Dumps the current bound framebuffer\n * @param width defines the rendering width\n * @param height defines the rendering height\n * @param engine defines the hosting engine\n * @param successCallback defines the callback triggered once the data are available\n * @param mimeType defines the mime type of the result\n * @param fileName defines the filename to download. If present, the result will automatically be downloaded\n * @param quality The quality of the image if lossy mimeType is used (e.g. image/jpeg, image/webp). See {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob | HTMLCanvasElement.toBlob()}'s `quality` parameter.\n * @returns a void promise\n */\n// Should have \"Async\" in the name but this is a public API and we can't break it now\n// eslint-disable-next-line no-restricted-syntax\nexport async function DumpFramebuffer(width, height, engine, successCallback, mimeType = \"image/png\", fileName, quality) {\n    // Read the contents of the framebuffer\n    const bufferView = await engine.readPixels(0, 0, width, height);\n    const data = new Uint8Array(bufferView.buffer);\n    DumpData(width, height, data, successCallback, mimeType, fileName, true, undefined, quality);\n}\n/**\n * Dumps an array buffer\n * @param width defines the rendering width\n * @param height defines the rendering height\n * @param data the data array\n * @param mimeType defines the mime type of the result\n * @param fileName defines the filename to download. If present, the result will automatically be downloaded\n * @param invertY true to invert the picture in the Y dimension\n * @param toArrayBuffer true to convert the data to an ArrayBuffer (encoded as `mimeType`) instead of a base64 string\n * @param quality The quality of the image if lossy mimeType is used (e.g. image/jpeg, image/webp). See {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob | HTMLCanvasElement.toBlob()}'s `quality` parameter.\n * @returns a promise that resolve to the final data\n */\nexport async function DumpDataAsync(width, height, data, mimeType = \"image/png\", fileName, invertY = false, toArrayBuffer = false, quality) {\n    // Convert if data are float32\n    if (data instanceof Float32Array) {\n        const data2 = new Uint8Array(data.length);\n        let n = data.length;\n        while (n--) {\n            const v = data[n];\n            data2[n] = Math.round(Clamp(v) * 255);\n        }\n        data = data2;\n    }\n    const resources = await _GetDumpResourcesAsync();\n    // Keep the async render + read from the shared canvas atomic\n    // eslint-disable-next-line no-async-promise-executor\n    return await new Promise(async (resolve) => {\n        if (resources.dumpEngine) {\n            const dumpEngine = resources.dumpEngine;\n            dumpEngine.engine.setSize(width, height, true);\n            // Create the image\n            const texture = dumpEngine.engine.createRawTexture(data, width, height, Constants.TEXTUREFORMAT_RGBA, false, !invertY, Constants.TEXTURE_NEAREST_NEAREST);\n            dumpEngine.renderer.setViewport();\n            dumpEngine.renderer.applyEffectWrapper(dumpEngine.wrapper);\n            dumpEngine.wrapper.effect._bindTexture(\"textureSampler\", texture);\n            dumpEngine.renderer.draw();\n            texture.dispose();\n        }\n        else {\n            const ctx = resources.canvas.getContext(\"bitmaprenderer\");\n            resources.canvas.width = width;\n            resources.canvas.height = height;\n            const imageData = new ImageData(width, height); // ImageData(data, sw, sh) ctor not yet widely implemented\n            imageData.data.set(data);\n            const imageBitmap = await createImageBitmap(imageData, { premultiplyAlpha: \"none\", imageOrientation: invertY ? \"flipY\" : \"from-image\" });\n            ctx.transferFromImageBitmap(imageBitmap);\n        }\n        Tools.ToBlob(resources.canvas, (blob) => {\n            if (!blob) {\n                throw new Error(\"DumpData: Failed to convert canvas to blob.\");\n            }\n            if (fileName !== undefined) {\n                Tools.DownloadBlob(blob, fileName);\n            }\n            const fileReader = new FileReader();\n            fileReader.onload = (event) => {\n                const result = event.target.result;\n                resolve(result);\n            };\n            if (toArrayBuffer) {\n                fileReader.readAsArrayBuffer(blob);\n            }\n            else {\n                fileReader.readAsDataURL(blob);\n            }\n        }, mimeType, quality);\n    });\n}\n/**\n * Dumps an array buffer\n * @param width defines the rendering width\n * @param height defines the rendering height\n * @param data the data array\n * @param successCallback defines the callback triggered once the data are available\n * @param mimeType defines the mime type of the result\n * @param fileName The name of the file to download. If present, the result will automatically be downloaded. If not defined, and `successCallback` is also not defined, the result will automatically be downloaded with an auto-generated file name.\n * @param invertY true to invert the picture in the Y dimension\n * @param toArrayBuffer true to convert the data to an ArrayBuffer (encoded as `mimeType`) instead of a base64 string\n * @param quality The quality of the image if lossy mimeType is used (e.g. image/jpeg, image/webp). See {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob | HTMLCanvasElement.toBlob()}'s `quality` parameter.\n */\nexport function DumpData(width, height, data, successCallback, mimeType = \"image/png\", fileName, invertY = false, toArrayBuffer = false, quality) {\n    // For back-compat: if no fileName and no callback, force download the result\n    if (fileName === undefined && !successCallback) {\n        fileName = \"\";\n    }\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    DumpDataAsync(width, height, data, mimeType, fileName, invertY, toArrayBuffer, quality)\n        // eslint-disable-next-line github/no-then\n        .then((result) => {\n        if (successCallback) {\n            successCallback(result);\n        }\n    });\n}\n/**\n * Dispose the dump tools associated resources\n */\nexport function Dispose() {\n    if (!ResourcesPromise) {\n        return;\n    }\n    // in cases where the engine is not yet created, we need to wait for it to dispose it\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises, github/no-then\n    ResourcesPromise?.then((resources) => {\n        if (resources.canvas instanceof HTMLCanvasElement) {\n            resources.canvas.remove();\n        }\n        if (resources.dumpEngine) {\n            resources.dumpEngine.engine.dispose();\n            resources.dumpEngine.renderer.dispose();\n            resources.dumpEngine.wrapper.dispose();\n        }\n    });\n    ResourcesPromise = null;\n}\n/**\n * Object containing a set of static utilities functions to dump data from a canvas\n * @deprecated use functions\n */\nexport const DumpTools = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    DumpData,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    DumpDataAsync,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    DumpFramebuffer,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Dispose,\n};\n/**\n * This will be executed automatically for UMD and es5.\n * If esm dev wants the side effects to execute they will have to run it manually\n * Once we build native modules those need to be exported.\n * @internal\n */\nconst InitSideEffects = () => {\n    // References the dependencies.\n    Tools.DumpData = DumpData;\n    Tools.DumpDataAsync = DumpDataAsync;\n    Tools.DumpFramebuffer = DumpFramebuffer;\n};\nInitSideEffects();\n//# sourceMappingURL=dumpTools.js.map"],"names":[],"mappings":"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"}