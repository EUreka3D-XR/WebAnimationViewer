{"version":3,"file":"KHR_materials_ior-BegzAkMn.esm.min.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/Extensions/KHR_materials_ior.js"],"sourcesContent":["import { GLTFLoader } from \"../glTFLoader\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nconst NAME = \"KHR_materials_ior\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_ior/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class KHR_materials_ior {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 180;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return GLTFLoader.LoadExtensionAsync(context, material, this.name, async (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadIorPropertiesAsync(extensionContext, extension, babylonMaterial));\n            // eslint-disable-next-line github/no-then\n            return await Promise.all(promises).then(() => { });\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\n    _loadIorPropertiesAsync(context, properties, babylonMaterial) {\n        const adapter = this._loader._getOrCreateMaterialAdapter(babylonMaterial);\n        const indexOfRefraction = properties.ior !== undefined ? properties.ior : KHR_materials_ior._DEFAULT_IOR;\n        adapter.specularIor = indexOfRefraction;\n        return Promise.resolve();\n    }\n}\n/**\n * Default ior Value from the spec.\n */\nKHR_materials_ior._DEFAULT_IOR = 1.5;\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new KHR_materials_ior(loader));\n//# sourceMappingURL=KHR_materials_ior.js.map"],"names":["NAME","KHR_materials_ior","constructor","loader","this","name","order","_loader","enabled","isExtensionUsed","dispose","loadMaterialPropertiesAsync","context","material","babylonMaterial","GLTFLoader","LoadExtensionAsync","async","extensionContext","extension","promises","Array","push","_loadIorPropertiesAsync","Promise","all","then","properties","adapter","_getOrCreateMaterialAdapter","indexOfRefraction","undefined","ior","_DEFAULT_IOR","specularIor","resolve","unregisterGLTFExtension","registerGLTFExtension"],"mappings":"wUAEA,MAAMA,EAAO,oBAKN,MAAMC,EAIT,WAAAC,CAAYC,GAIRC,KAAKC,KAAOL,EAIZI,KAAKE,MAAQ,IACbF,KAAKG,QAAUJ,EACfC,KAAKI,QAAUJ,KAAKG,QAAQE,gBAAgBT,EACpD,CAEI,OAAAU,GACIN,KAAKG,QAAU,IACvB,CAKI,2BAAAI,CAA4BC,EAASC,EAAUC,GAC3C,OAAOC,EAAWC,mBAAmBJ,EAASC,EAAUT,KAAKC,MAAMY,MAAOC,EAAkBC,KACxF,MAAMC,EAAW,IAAIC,MAIrB,OAHAD,EAASE,KAAKlB,KAAKG,QAAQI,4BAA4BC,EAASC,EAAUC,IAC1EM,EAASE,KAAKlB,KAAKmB,wBAAwBL,EAAkBC,EAAWL,UAE3DU,QAAQC,IAAIL,GAAUM,MAAK,WAEpD,CAEI,uBAAAH,CAAwBX,EAASe,EAAYb,GACzC,MAAMc,EAAUxB,KAAKG,QAAQsB,4BAA4Bf,GACnDgB,OAAuCC,IAAnBJ,EAAWK,IAAoBL,EAAWK,IAAM/B,EAAkBgC,aAE5F,OADAL,EAAQM,YAAcJ,EACfN,QAAQW,SACvB,EAKAlC,EAAkBgC,aAAe,IACjCG,EAAwBpC,GACxBqC,EAAsBrC,GAAM,GAAOG,GAAW,IAAIF,EAAkBE"}