import{GLTFLoader as s}from"./glTFLoader-ASl42hNE.esm.min.js";import{aW as e,bK as r,bJ as i}from"./index-BeBPThKX.esm.min.js";import"./bone-4zSTwM2L.esm.min.js";import"./skeleton-BM6jc2S2.esm.min.js";import"./rawTexture-OHFtV4yv.esm.min.js";import"./assetContainer-C4iCgc7c.esm.min.js";import"./objectModelMapping-C_2yKgOV.esm.min.js";const n="KHR_materials_diffuse_transmission";class o{constructor(s){this.name=n,this.order=174,this._loader=s,this.enabled=this._loader.isExtensionUsed(n),this.enabled&&(s.parent.transparencyAsCoverage=!0)}dispose(){this._loader=null}loadMaterialPropertiesAsync(e,r,i){return s.LoadExtensionAsync(e,r,this.name,(async(s,n)=>{const o=new Array;return o.push(this._loader.loadMaterialPropertiesAsync(e,r,i)),o.push(this._loadTranslucentPropertiesAsync(s,r,i,n)),await Promise.all(o).then((()=>{}))}))}_loadTranslucentPropertiesAsync(s,r,i,n){const o=this._loader._getOrCreateMaterialAdapter(i);o.configureSubsurface(),o.subsurfaceWeight=n.diffuseTransmissionFactor??0,o.subsurfaceColor=void 0!==n.diffuseTransmissionColorFactor?e.FromArray(n.diffuseTransmissionColorFactor):e.White();const a=new Array;return n.diffuseTransmissionTexture&&(n.diffuseTransmissionTexture.nonColorData=!0,a.push(this._loader.loadTextureInfoAsync(`${s}/diffuseTransmissionTexture`,n.diffuseTransmissionTexture).then((s=>{s.name=`${i.name} (Diffuse Transmission)`,o.subsurfaceWeightTexture=s})))),n.diffuseTransmissionColorTexture&&a.push(this._loader.loadTextureInfoAsync(`${s}/diffuseTransmissionColorTexture`,n.diffuseTransmissionColorTexture).then((s=>{s.name=`${i.name} (Diffuse Transmission Color)`,o.subsurfaceColorTexture=s}))),Promise.all(a).then((()=>{}))}}r(n),i(n,!0,(s=>new o(s)));export{o as KHR_materials_diffuse_transmission};
//# sourceMappingURL=KHR_materials_diffuse_transmission-BbaqFc-k.esm.min.js.map
