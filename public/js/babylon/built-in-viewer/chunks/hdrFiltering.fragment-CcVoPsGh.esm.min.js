import{F as n}from"./index-BeBPThKX.esm.min.js";import"./helperFunctions-KCrxHKgi.esm.min.js";import"./hdrFilteringFunctions-BeJJl5WW.esm.min.js";import"./pbrBRDFFunctions-mX-oiThj.esm.min.js";const i="hdrFilteringPixelShader",e="#include<helperFunctions>\n#include<importanceSampling>\n#include<pbrBRDFFunctions>\n#include<hdrFilteringFunctions>\nuniform float alphaG;uniform samplerCube inputTexture;uniform vec2 vFilteringInfo;uniform float hdrScale;varying vec3 direction;void main() {vec3 color=radiance(alphaG,inputTexture,direction,vFilteringInfo);gl_FragColor=vec4(color*hdrScale,1.0);}";n.ShadersStore[i]||(n.ShadersStore[i]=e);const r={name:i,shader:e};export{r as hdrFilteringPixelShader};
//# sourceMappingURL=hdrFiltering.fragment-CcVoPsGh.esm.min.js.map
