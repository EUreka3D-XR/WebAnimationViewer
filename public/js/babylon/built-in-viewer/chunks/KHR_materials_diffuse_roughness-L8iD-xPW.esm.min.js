import{GLTFLoader as e}from"./glTFLoader-ASl42hNE.esm.min.js";import{bK as s,bJ as r}from"./index-BeBPThKX.esm.min.js";import"./bone-4zSTwM2L.esm.min.js";import"./skeleton-BM6jc2S2.esm.min.js";import"./rawTexture-OHFtV4yv.esm.min.js";import"./assetContainer-C4iCgc7c.esm.min.js";import"./objectModelMapping-C_2yKgOV.esm.min.js";const o="KHR_materials_diffuse_roughness";class t{constructor(e){this.name=o,this.order=190,this._loader=e,this.enabled=this._loader.isExtensionUsed(o)}dispose(){this._loader=null}loadMaterialPropertiesAsync(s,r,o){return e.LoadExtensionAsync(s,r,this.name,(async(e,t)=>{const i=new Array;return i.push(this._loader.loadMaterialPropertiesAsync(s,r,o)),i.push(this._loadDiffuseRoughnessPropertiesAsync(e,t,o)),await Promise.all(i).then((()=>{}))}))}_loadDiffuseRoughnessPropertiesAsync(e,s,r){const o=this._loader._getOrCreateMaterialAdapter(r),t=new Array;return o.baseDiffuseRoughness=s.diffuseRoughnessFactor??0,s.diffuseRoughnessTexture&&t.push(this._loader.loadTextureInfoAsync(`${e}/diffuseRoughnessTexture`,s.diffuseRoughnessTexture,(e=>{e.name=`${r.name} (Diffuse Roughness)`,o.baseDiffuseRoughnessTexture=e}))),Promise.all(t).then((()=>{}))}}s(o),r(o,!0,(e=>new t(e)));export{t as KHR_materials_diffuse_roughness};
//# sourceMappingURL=KHR_materials_diffuse_roughness-L8iD-xPW.esm.min.js.map
