{"version":3,"file":"imageProcessing.fragment-DVxNdHNy.esm.min.js","sources":["../../../../../dev/core/dist/Shaders/imageProcessing.fragment.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/imageProcessingDeclaration\";\nimport \"./ShadersInclude/helperFunctions\";\nimport \"./ShadersInclude/imageProcessingFunctions\";\nconst name = \"imageProcessingPixelShader\";\nconst shader = `varying vec2 vUV;uniform sampler2D textureSampler;\n#include<imageProcessingDeclaration>\n#include<helperFunctions>\n#include<imageProcessingFunctions>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{vec4 result=texture2D(textureSampler,vUV);result.rgb=max(result.rgb,vec3(0.));\n#ifdef IMAGEPROCESSING\n#ifndef FROMLINEARSPACE\nresult.rgb=toLinearSpace(result.rgb);\n#endif\nresult=applyImageProcessing(result);\n#else\n#ifdef FROMLINEARSPACE\nresult=applyImageProcessing(result);\n#endif\n#endif\ngl_FragColor=result;}`;\n// Sideeffect\nif (!ShaderStore.ShadersStore[name]) {\n    ShaderStore.ShadersStore[name] = shader;\n}\n/** @internal */\nexport const imageProcessingPixelShader = { name, shader };\n//# sourceMappingURL=imageProcessing.fragment.js.map"],"names":["name","shader","ShaderStore","ShadersStore","imageProcessingPixelShader"],"mappings":"qJAKA,MAAMA,EAAO,6BACPC,EAAS,mhBAmBVC,EAAYC,aAAaH,KAC1BE,EAAYC,aAAaH,GAAQC,GAGzB,MAACG,EAA6B,CAAEJ,OAAMC"}