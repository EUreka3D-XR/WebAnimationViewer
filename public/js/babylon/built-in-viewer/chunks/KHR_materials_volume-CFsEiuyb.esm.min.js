import{aW as e,bK as s,bJ as t}from"./index-BeBPThKX.esm.min.js";import{GLTFLoader as n}from"./glTFLoader-ASl42hNE.esm.min.js";import"./bone-4zSTwM2L.esm.min.js";import"./skeleton-BM6jc2S2.esm.min.js";import"./rawTexture-OHFtV4yv.esm.min.js";import"./assetContainer-C4iCgc7c.esm.min.js";import"./objectModelMapping-C_2yKgOV.esm.min.js";const i="KHR_materials_volume";class o{constructor(e){this.name=i,this.order=173,this._loader=e,this.enabled=this._loader.isExtensionUsed(i),this.enabled&&this._loader._disableInstancedMesh++}dispose(){this.enabled&&this._loader._disableInstancedMesh--,this._loader=null}loadMaterialPropertiesAsync(e,s,t){return n.LoadExtensionAsync(e,s,this.name,(async(n,i)=>{const o=new Array;return o.push(this._loader.loadMaterialPropertiesAsync(e,s,t)),o.push(this._loadVolumePropertiesAsync(n,s,t,i)),await Promise.all(o).then((()=>{}))}))}_loadVolumePropertiesAsync(s,t,n,i){const o=this._loader._getOrCreateMaterialAdapter(n);if(0===o.transmissionWeight&&0===o.subsurfaceWeight||!i.thicknessFactor)return Promise.resolve();o.transmissionDepth=void 0!==i.attenuationDistance?i.attenuationDistance:Number.MAX_VALUE,o.transmissionColor=void 0!==i.attenuationColor&&3==i.attenuationColor.length?e.FromArray(i.attenuationColor):e.White(),o.volumeThickness=i.thicknessFactor??0;const r=new Array;return i.thicknessTexture&&(i.thicknessTexture.nonColorData=!0,r.push(this._loader.loadTextureInfoAsync(`${s}/thicknessTexture`,i.thicknessTexture,(e=>{e.name=`${n.name} (Thickness)`,o.volumeThicknessTexture=e})))),Promise.all(r).then((()=>{}))}}s(i),t(i,!0,(e=>new o(e)));export{o as KHR_materials_volume};
//# sourceMappingURL=KHR_materials_volume-CFsEiuyb.esm.min.js.map
