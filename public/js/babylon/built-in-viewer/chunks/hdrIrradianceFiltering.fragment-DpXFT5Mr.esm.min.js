import{F as n}from"./index-BeBPThKX.esm.min.js";import"./helperFunctions-KCrxHKgi.esm.min.js";import"./hdrFilteringFunctions-BeJJl5WW.esm.min.js";import"./pbrBRDFFunctions-mX-oiThj.esm.min.js";const i="hdrIrradianceFilteringPixelShader",e="#include<helperFunctions>\n#include<importanceSampling>\n#include<pbrBRDFFunctions>\n#include<hdrFilteringFunctions>\nuniform samplerCube inputTexture;\n#ifdef IBL_CDF_FILTERING\nuniform sampler2D icdfTexture;\n#endif\nuniform vec2 vFilteringInfo;uniform float hdrScale;varying vec3 direction;void main() {vec3 color=irradiance(inputTexture,direction,vFilteringInfo,0.0,vec3(1.0),direction\n#ifdef IBL_CDF_FILTERING\n,icdfTexture\n#endif\n);gl_FragColor=vec4(color*hdrScale,1.0);}";n.ShadersStore[i]||(n.ShadersStore[i]=e);const r={name:i,shader:e};export{r as hdrIrradianceFilteringPixelShader};
//# sourceMappingURL=hdrIrradianceFiltering.fragment-DpXFT5Mr.esm.min.js.map
