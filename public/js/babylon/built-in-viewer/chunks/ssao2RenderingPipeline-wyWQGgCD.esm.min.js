import{C as e,E as s,L as t,P as r,T as i,a as o,V as n,b as a,c as h,d as l,R as p,S as _,_ as m,s as c,e as u}from"./index-BeBPThKX.esm.min.js";import{P as d,a as P}from"./postProcessRenderEffect-1llyMYqs.esm.min.js";import{G as f}from"./geometryBufferRenderer-B36so5nd.esm.min.js";import{R as S}from"./rawTexture-OHFtV4yv.esm.min.js";import"./postProcessRenderPipelineManagerSceneComponent-DUhpftpE.esm.min.js";import"./engine.multiRender-DyBGUrkO.esm.min.js";import"./bumpFragment--yeEWzNa.esm.min.js";import"./helperFunctions-KCrxHKgi.esm.min.js";import"./sceneUboDeclaration-BuZ8Ttoi.esm.min.js";import"./bumpVertex-DwzgudSD.esm.min.js";class g{constructor(){this.enabled=!1,this.name="ssao2",this.texturesRequired=[e.PREPASS_NORMAL_TEXTURE_TYPE,e.PREPASS_DEPTH_TEXTURE_TYPE]}}class E extends d{set epsilon(e){this._epsilon=e,this._ssaoPostProcess.updateEffect(this._getDefinesForSSAO())}get epsilon(){return this._epsilon}set samples(e){this._samples=e,this._ssaoPostProcess.updateEffect(this._getDefinesForSSAO()),this._sampleSphere=this._generateHemisphere()}get samples(){return this._samples}set textureSamples(e){this._textureSamples=e,this._prePassRenderer?this._prePassRenderer.samples=e:this._originalColorPostProcess.samples=e}get textureSamples(){return this._textureSamples}get _geometryBufferRenderer(){return this._forceGeometryBuffer?this._forcedGeometryBuffer??this._scene.geometryBufferRenderer:null}get _prePassRenderer(){return this._forceGeometryBuffer?null:this._scene.prePassRenderer}set bypassBlur(e){const s=this._getDefinesForBlur(this.expensiveBlur,e),t=this._getSamplersForBlur(e);this._blurHPostProcess.updateEffect(s.h,null,t),this._blurVPostProcess.updateEffect(s.v,null,t),this._bypassBlur=e}get bypassBlur(){return this._bypassBlur}set expensiveBlur(e){const s=this._getDefinesForBlur(e,this._bypassBlur);this._blurHPostProcess.updateEffect(s.h),this._blurVPostProcess.updateEffect(s.v),this._expensiveBlur=e}get expensiveBlur(){return this._expensiveBlur}static get IsSupported(){const e=s.LastCreatedEngine;return!!e&&e._features.supportSSAO2}get scene(){return this._scene}constructor(s,o,n,a,h=!1,l=e.TEXTURETYPE_UNSIGNED_BYTE){if(super(o.getEngine(),s),this.SSAOOriginalSceneColorEffect="SSAOOriginalSceneColorEffect",this.SSAORenderEffect="SSAORenderEffect",this.SSAOBlurHRenderEffect="SSAOBlurHRenderEffect",this.SSAOBlurVRenderEffect="SSAOBlurVRenderEffect",this.SSAOCombineRenderEffect="SSAOCombineRenderEffect",this.totalStrength=1,this.maxZ=100,this.minZAspect=.2,this._epsilon=.02,this._samples=8,this._textureSamples=1,this._forcedGeometryBuffer=null,this._forceGeometryBuffer=!1,this.radius=2,this.base=0,this._bypassBlur=!1,this._expensiveBlur=!0,this.bilateralSamples=16,this.bilateralSoften=0,this.bilateralTolerance=0,this.useViewportInCombineStage=!0,this._bits=new Uint32Array(1),this._scene=o,this._ratio=n,this._textureType=l,h instanceof f?(this._forceGeometryBuffer=!0,this._forcedGeometryBuffer=h):this._forceGeometryBuffer=h,!this.isSupported)return void t.Error("The current engine does not support SSAO 2.");const p=this._ratio.ssaoRatio||n,_=this._ratio.blurRatio||n;this._forceGeometryBuffer?(this._forcedGeometryBuffer||o.enableGeometryBufferRenderer(),o.geometryBufferRenderer?.generateNormalsInWorldSpace&&t.Error("SSAO2RenderingPipeline does not support generateNormalsInWorldSpace=true for the geometry buffer renderer!")):(o.enablePrePassRenderer(),o.prePassRenderer?.generateNormalsInWorldSpace&&t.Error("SSAO2RenderingPipeline does not support generateNormalsInWorldSpace=true for the prepass renderer!")),this._createRandomTexture(),this._originalColorPostProcess=new r("SSAOOriginalSceneColor",1,null,i.BILINEAR_SAMPLINGMODE,o.getEngine(),void 0,this._textureType),this._originalColorPostProcess.samples=this.textureSamples,this._createSSAOPostProcess(1,l),this._createBlurPostProcess(p,_,this._textureType),this._createSSAOCombinePostProcess(_,this._textureType),this.addEffect(new P(o.getEngine(),this.SSAOOriginalSceneColorEffect,(()=>this._originalColorPostProcess),!0)),this.addEffect(new P(o.getEngine(),this.SSAORenderEffect,(()=>this._ssaoPostProcess),!0)),this.addEffect(new P(o.getEngine(),this.SSAOBlurHRenderEffect,(()=>this._blurHPostProcess),!0)),this.addEffect(new P(o.getEngine(),this.SSAOBlurVRenderEffect,(()=>this._blurVPostProcess),!0)),this.addEffect(new P(o.getEngine(),this.SSAOCombineRenderEffect,(()=>this._ssaoCombinePostProcess),!0)),o.postProcessRenderPipelineManager.addPipeline(this),a&&o.postProcessRenderPipelineManager.attachCamerasToRenderPipeline(s,a)}getClassName(){return"SSAO2RenderingPipeline"}dispose(e=!1){for(let e=0;e<this._scene.cameras.length;e++){const s=this._scene.cameras[e];this._originalColorPostProcess.dispose(s),this._ssaoPostProcess.dispose(s),this._blurHPostProcess.dispose(s),this._blurVPostProcess.dispose(s),this._ssaoCombinePostProcess.dispose(s)}this._randomTexture.dispose(),e&&!this._forcedGeometryBuffer&&this._scene.disableGeometryBufferRenderer(),this._scene.postProcessRenderPipelineManager.detachCamerasFromRenderPipeline(this._name,this._scene.cameras),this._scene.postProcessRenderPipelineManager.removePipeline(this._name),super.dispose()}_rebuild(){super._rebuild()}_getSamplersForBlur(e){return e?["textureSampler"]:["textureSampler","depthSampler"]}_getDefinesForBlur(e,s){let t="#define BLUR\n";return s&&(t+="#define BLUR_BYPASS\n"),e||(t+="#define BLUR_LEGACY\n"),{h:t+"#define BLUR_H\n",v:t}}_createBlurPostProcess(e,s,t){const r=this._getDefinesForBlur(this.expensiveBlur,this.bypassBlur),i=this._getSamplersForBlur(this.bypassBlur);this._blurHPostProcess=this._createBlurFilter("BlurH",i,e,r.h,t,!0),this._blurVPostProcess=this._createBlurFilter("BlurV",i,s,r.v,t,!1)}_createBlurFilter(s,t,r,n,a,h){const l=new o(s,"ssao2",["outSize","samples","soften","tolerance"],t,r,null,i.BILINEAR_SAMPLINGMODE,this._scene.getEngine(),!1,n,a,void 0,void 0,void 0,void 0,this._scene.getEngine().isWebGPU?1:0,((e,s)=>{e?s.push(import("./ssao2.fragment-avjSFQx5.esm.min.js")):s.push(import("./ssao2.fragment-CyuVx7r2.esm.min.js"))}));return l.onApply=s=>{if(!this._scene.activeCamera)return;const t=this._ratio.blurRatio||this._ratio,r=h?this._originalColorPostProcess.width*t:this._originalColorPostProcess.height*t,i=h?this._originalColorPostProcess.width:this._originalColorPostProcess.height;s.setFloat("outSize",r>0?r:i),s.setInt("samples",this.bilateralSamples),s.setFloat("soften",this.bilateralSoften),s.setFloat("tolerance",this.bilateralTolerance),this._geometryBufferRenderer?s.setTexture("depthSampler",this._geometryBufferRenderer.getGBuffer().textures[0]):this._prePassRenderer&&s.setTexture("depthSampler",this._prePassRenderer.getRenderTarget().textures[this._prePassRenderer.getIndex(e.PREPASS_DEPTH_TEXTURE_TYPE)])},l.samples=this.textureSamples,l.autoClear=!1,l}_radicalInverse_VdC(e){return this._bits[0]=e,this._bits[0]=(this._bits[0]<<16|this._bits[0]>>16)>>>0,this._bits[0]=(1431655765&this._bits[0])<<1|(2863311530&this._bits[0])>>>1>>>0,this._bits[0]=(858993459&this._bits[0])<<2|(3435973836&this._bits[0])>>>2>>>0,this._bits[0]=(252645135&this._bits[0])<<4|(4042322160&this._bits[0])>>>4>>>0,this._bits[0]=(16711935&this._bits[0])<<8|(4278255360&this._bits[0])>>>8>>>0,2.3283064365386963e-10*this._bits[0]}_hammersley(e,s){return[e/s,this._radicalInverse_VdC(e)]}_hemisphereSample_uniform(e,s){const t=2*s*Math.PI,r=1-.85*e,i=Math.sqrt(1-r*r);return new n(Math.cos(t)*i,Math.sin(t)*i,r)}_generateHemisphere(){const e=this.samples,s=[];let t,r=0;for(;r<e;){if(e<16)t=this._hemisphereSample_uniform(Math.random(),Math.random());else{const s=this._hammersley(r,e);t=this._hemisphereSample_uniform(s[0],s[1])}s.push(t.x,t.y,t.z),r++}return s}_getDefinesForSSAO(){let e=`#define SSAO\n#define SAMPLES ${this.samples}\n#define EPSILON ${this.epsilon.toFixed(4)}`;return this._scene.activeCamera?.mode===a.ORTHOGRAPHIC_CAMERA&&(e+="\n#define ORTHOGRAPHIC_CAMERA"),e}_createSSAOPostProcess(s,t){this._sampleSphere=this._generateHemisphere();const r=this._getDefinesForSSAO();this._ssaoPostProcess=new o("ssao2","ssao2",["sampleSphere","samplesFactor","randTextureTiles","totalStrength","radius","base","range","projection","near","texelSize","xViewport","yViewport","viewport","maxZ","minZAspect","depthProjection"],["randomSampler","depthSampler","normalSampler"],s,null,i.BILINEAR_SAMPLINGMODE,this._scene.getEngine(),!1,r,t,void 0,void 0,void 0,void 0,this._scene.getEngine().isWebGPU?1:0,((e,s)=>{e?s.push(import("./ssao2.fragment-avjSFQx5.esm.min.js")):s.push(import("./ssao2.fragment-CyuVx7r2.esm.min.js"))})),this._ssaoPostProcess.autoClear=!1,this._ssaoPostProcess.onApply=s=>{if(this._scene.activeCamera){if(s.setArray3("sampleSphere",this._sampleSphere),s.setFloat("randTextureTiles",32),s.setFloat("samplesFactor",1/this.samples),s.setFloat("totalStrength",this.totalStrength),s.setFloat2("texelSize",1/this._ssaoPostProcess.width,1/this._ssaoPostProcess.height),s.setFloat("radius",this.radius),s.setFloat("maxZ",this.maxZ),s.setFloat("minZAspect",this.minZAspect),s.setFloat("base",this.base),s.setFloat("near",this._scene.activeCamera.minZ),this._scene.activeCamera.mode===a.PERSPECTIVE_CAMERA)s.setMatrix3x3("depthProjection",E.PERSPECTIVE_DEPTH_PROJECTION),s.setFloat("xViewport",Math.tan(this._scene.activeCamera.fov/2)*this._scene.getEngine().getAspectRatio(this._scene.activeCamera,!0)),s.setFloat("yViewport",Math.tan(this._scene.activeCamera.fov/2));else{const e=this._scene.getEngine().getRenderWidth()/2,t=this._scene.getEngine().getRenderHeight()/2,r=this._scene.activeCamera.orthoLeft??-e,i=this._scene.activeCamera.orthoRight??e,o=this._scene.activeCamera.orthoBottom??-t,n=this._scene.activeCamera.orthoTop??t;s.setMatrix3x3("depthProjection",E.ORTHO_DEPTH_PROJECTION),s.setFloat4("viewport",r,i,o,n)}s.setMatrix("projection",this._scene.getProjectionMatrix()),this._geometryBufferRenderer?(s.setTexture("depthSampler",this._geometryBufferRenderer.getGBuffer().textures[0]),s.setTexture("normalSampler",this._geometryBufferRenderer.getGBuffer().textures[1])):this._prePassRenderer&&(s.setTexture("depthSampler",this._prePassRenderer.getRenderTarget().textures[this._prePassRenderer.getIndex(e.PREPASS_DEPTH_TEXTURE_TYPE)]),s.setTexture("normalSampler",this._prePassRenderer.getRenderTarget().textures[this._prePassRenderer.getIndex(e.PREPASS_NORMAL_TEXTURE_TYPE)])),s.setTexture("randomSampler",this._randomTexture)}},this._ssaoPostProcess.samples=this.textureSamples,this._forceGeometryBuffer||(this._ssaoPostProcess._prePassEffectConfiguration=new g)}_createSSAOCombinePostProcess(e,s){this._ssaoCombinePostProcess=new o("ssaoCombine","ssaoCombine",[],["originalColor","viewport"],e,null,i.BILINEAR_SAMPLINGMODE,this._scene.getEngine(),!1,void 0,s,void 0,void 0,void 0,void 0,this._scene.getEngine().isWebGPU?1:0,((e,s)=>{e?s.push(import("./ssaoCombine.fragment-BP-tqeBL.esm.min.js")):s.push(import("./ssaoCombine.fragment-BWxOkm-Z.esm.min.js"))})),this._ssaoCombinePostProcess.onApply=e=>{const s=this._scene.activeCamera.viewport;this.useViewportInCombineStage?e.setVector4("viewport",h.Vector4[0].copyFromFloats(s.x,s.y,s.width,s.height)):e.setVector4("viewport",h.Vector4[0].copyFromFloats(0,0,1,1)),e.setTextureFromPostProcessOutput("originalColor",this._originalColorPostProcess)},this._ssaoCombinePostProcess.autoClear=!1,this._ssaoCombinePostProcess.samples=this.textureSamples}_createRandomTexture(){const s=128,t=new Uint8Array(65536),r=l.Zero();for(let e=0;e<t.length;)r.set(p(0,1),p(0,1)).normalize().scaleInPlace(255),t[e++]=Math.floor(r.x),t[e++]=Math.floor(r.y),t[e++]=0,t[e++]=255;const o=S.CreateRGBATexture(t,s,s,this._scene,!1,!1,e.TEXTURE_BILINEAR_SAMPLINGMODE);o.name="SSAORandomTexture",o.wrapU=i.WRAP_ADDRESSMODE,o.wrapV=i.WRAP_ADDRESSMODE,this._randomTexture=o}serialize(){const e=_.Serialize(this);return e.customType="SSAO2RenderingPipeline",e}static Parse(e,s,t){return _.Parse((()=>new E(e._name,s,e._ratio,void 0,e._forceGeometryBuffer,e._textureType)),e,s,t)}}E.ORTHO_DEPTH_PROJECTION=[1,0,0,0,1,0,0,0,1],E.PERSPECTIVE_DEPTH_PROJECTION=[0,0,0,0,0,0,1,1,1],m([c()],E.prototype,"totalStrength",void 0),m([c()],E.prototype,"maxZ",void 0),m([c()],E.prototype,"minZAspect",void 0),m([c("epsilon")],E.prototype,"_epsilon",void 0),m([c("samples")],E.prototype,"_samples",void 0),m([c("textureSamples")],E.prototype,"_textureSamples",void 0),m([c()],E.prototype,"_forceGeometryBuffer",void 0),m([c()],E.prototype,"_ratio",void 0),m([c()],E.prototype,"_textureType",void 0),m([c()],E.prototype,"radius",void 0),m([c()],E.prototype,"base",void 0),m([c("bypassBlur")],E.prototype,"_bypassBlur",void 0),m([c("expensiveBlur")],E.prototype,"_expensiveBlur",void 0),m([c()],E.prototype,"bilateralSamples",void 0),m([c()],E.prototype,"bilateralSoften",void 0),m([c()],E.prototype,"bilateralTolerance",void 0),u("BABYLON.SSAO2RenderingPipeline",E);export{E as SSAO2RenderingPipeline};
//# sourceMappingURL=ssao2RenderingPipeline-wyWQGgCD.esm.min.js.map
