{"version":3,"file":"KHR_materials_specular-D-jCVgV_.esm.min.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/Extensions/KHR_materials_specular.js"],"sourcesContent":["import { GLTFLoader } from \"../glTFLoader\";\nimport { Color3 } from \"core/Maths/math.color\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nconst NAME = \"KHR_materials_specular\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_specular/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class KHR_materials_specular {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 190;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return GLTFLoader.LoadExtensionAsync(context, material, this.name, async (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadSpecularPropertiesAsync(extensionContext, extension, babylonMaterial));\n            // Handle the EXT_materials_specular_edge_color sub-extension\n            // https://github.com/KhronosGroup/glTF/blob/2a1111b88f052cbd3e2d82abb9faee56e7494904/extensions/2.0/Vendor/EXT_materials_specular_edge_color/README.md\n            const adapter = this._loader._getOrCreateMaterialAdapter(babylonMaterial);\n            if (extension.extensions && extension.extensions.EXT_materials_specular_edge_color) {\n                const specularEdgeColorExtension = extension.extensions.EXT_materials_specular_edge_color;\n                if (specularEdgeColorExtension.specularEdgeColorEnabled) {\n                    adapter.enableSpecularEdgeColor(true);\n                }\n            }\n            // eslint-disable-next-line github/no-then\n            return await Promise.all(promises).then(() => { });\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\n    _loadSpecularPropertiesAsync(context, properties, babylonMaterial) {\n        const adapter = this._loader._getOrCreateMaterialAdapter(babylonMaterial);\n        const promises = new Array();\n        // Set non-texture properties immediately\n        adapter.specularWeight = properties.specularFactor ?? 1.0;\n        adapter.specularColor = properties.specularColorFactor !== undefined ? Color3.FromArray(properties.specularColorFactor) : new Color3(1, 1, 1);\n        if (properties.specularTexture) {\n            properties.specularTexture.nonColorData = true;\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/specularTexture`, properties.specularTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Specular)`;\n                adapter.specularWeightTexture = texture;\n            }));\n        }\n        if (properties.specularColorTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/specularColorTexture`, properties.specularColorTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Specular Color)`;\n                adapter.specularColorTexture = texture;\n            }));\n        }\n        // eslint-disable-next-line github/no-then\n        return Promise.all(promises).then(() => { });\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new KHR_materials_specular(loader));\n//# sourceMappingURL=KHR_materials_specular.js.map"],"names":["NAME","KHR_materials_specular","constructor","loader","this","name","order","_loader","enabled","isExtensionUsed","dispose","loadMaterialPropertiesAsync","context","material","babylonMaterial","GLTFLoader","LoadExtensionAsync","async","extensionContext","extension","promises","Array","push","_loadSpecularPropertiesAsync","adapter","_getOrCreateMaterialAdapter","extensions","EXT_materials_specular_edge_color","specularEdgeColorEnabled","enableSpecularEdgeColor","Promise","all","then","properties","specularWeight","specularFactor","specularColor","undefined","specularColorFactor","Color3","FromArray","specularTexture","nonColorData","loadTextureInfoAsync","texture","specularWeightTexture","specularColorTexture","unregisterGLTFExtension","registerGLTFExtension"],"mappings":"gVAGA,MAAMA,EAAO,yBAKN,MAAMC,EAIT,WAAAC,CAAYC,GAIRC,KAAKC,KAAOL,EAIZI,KAAKE,MAAQ,IACbF,KAAKG,QAAUJ,EACfC,KAAKI,QAAUJ,KAAKG,QAAQE,gBAAgBT,EACpD,CAEI,OAAAU,GACIN,KAAKG,QAAU,IACvB,CAKI,2BAAAI,CAA4BC,EAASC,EAAUC,GAC3C,OAAOC,EAAWC,mBAAmBJ,EAASC,EAAUT,KAAKC,MAAMY,MAAOC,EAAkBC,KACxF,MAAMC,EAAW,IAAIC,MACrBD,EAASE,KAAKlB,KAAKG,QAAQI,4BAA4BC,EAASC,EAAUC,IAC1EM,EAASE,KAAKlB,KAAKmB,6BAA6BL,EAAkBC,EAAWL,IAG7E,MAAMU,EAAUpB,KAAKG,QAAQkB,4BAA4BX,GACzD,GAAIK,EAAUO,YAAcP,EAAUO,WAAWC,kCAAmC,CAC7CR,EAAUO,WAAWC,kCACzBC,0BAC3BJ,EAAQK,yBAAwB,EAEpD,CAEY,aAAaC,QAAQC,IAAIX,GAAUY,MAAK,WAEpD,CAEI,4BAAAT,CAA6BX,EAASqB,EAAYnB,GAC9C,MAAMU,EAAUpB,KAAKG,QAAQkB,4BAA4BX,GACnDM,EAAW,IAAIC,MAkBrB,OAhBAG,EAAQU,eAAiBD,EAAWE,gBAAkB,EACtDX,EAAQY,mBAAmDC,IAAnCJ,EAAWK,oBAAoCC,EAAOC,UAAUP,EAAWK,qBAAuB,IAAIC,EAAO,EAAG,EAAG,GACvIN,EAAWQ,kBACXR,EAAWQ,gBAAgBC,cAAe,EAC1CtB,EAASE,KAAKlB,KAAKG,QAAQoC,qBAAqB,GAAG/B,oBAA2BqB,EAAWQ,iBAAkBG,IACvGA,EAAQvC,KAAO,GAAGS,EAAgBT,kBAClCmB,EAAQqB,sBAAwBD,OAGpCX,EAAWa,sBACX1B,EAASE,KAAKlB,KAAKG,QAAQoC,qBAAqB,GAAG/B,yBAAgCqB,EAAWa,sBAAuBF,IACjHA,EAAQvC,KAAO,GAAGS,EAAgBT,wBAClCmB,EAAQsB,qBAAuBF,MAIhCd,QAAQC,IAAIX,GAAUY,MAAK,QAC1C,EAEAe,EAAwB/C,GACxBgD,EAAsBhD,GAAM,GAAOG,GAAW,IAAIF,EAAuBE"}