import{F as e}from"./index-BeBPThKX.esm.min.js";import"./imageProcessingFunctions-D3HR-STE.esm.min.js";import"./helperFunctions-Dzpt41T7.esm.min.js";const n="imageProcessingPixelShader",r="varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;\n#include<imageProcessingDeclaration>\n#include<helperFunctions>\n#include<imageProcessingFunctions>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {var result: vec4f=textureSample(textureSampler,textureSamplerSampler,input.vUV);result=vec4f(max(result.rgb,vec3f(0.)),result.a);\n#ifdef IMAGEPROCESSING\n#ifndef FROMLINEARSPACE\nresult=vec4f(toLinearSpaceVec3(result.rgb),result.a);\n#endif\nresult=applyImageProcessing(result);\n#else\n#ifdef FROMLINEARSPACE\nresult=applyImageProcessing(result);\n#endif\n#endif\nfragmentOutputs.color=result;}";e.ShadersStoreWGSL[n]||(e.ShadersStoreWGSL[n]=r);const t={name:n,shader:r};export{t as imageProcessingPixelShaderWGSL};
//# sourceMappingURL=imageProcessing.fragment-hLYCNi7u.esm.min.js.map
