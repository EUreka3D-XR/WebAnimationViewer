{"version":3,"file":"postProcessRenderEffect-BdKhAR29.esm.js","sources":["../../../../../dev/core/dist/PostProcesses/RenderPipeline/postProcessRenderPipeline.js","../../../../../dev/core/dist/PostProcesses/RenderPipeline/postProcessRenderEffect.js"],"sourcesContent":["import { __decorate } from \"tslib\";\nimport { Tools } from \"../../Misc/tools\";\nimport { serialize } from \"../../Misc/decorators\";\nimport { UniqueIdGenerator } from \"core/Misc/uniqueIdGenerator\";\n/**\n * PostProcessRenderPipeline\n * @see https://doc.babylonjs.com/features/featuresDeepDive/postProcesses/postProcessRenderPipeline\n */\nexport class PostProcessRenderPipeline {\n    /**\n     * Gets pipeline name\n     */\n    get name() {\n        return this._name;\n    }\n    /** Gets the list of attached cameras */\n    get cameras() {\n        return this._cameras;\n    }\n    /**\n     * Gets the active engine\n     */\n    get engine() {\n        return this._engine;\n    }\n    /**\n     * Initializes a PostProcessRenderPipeline\n     * @param _engine engine to add the pipeline to\n     * @param name name of the pipeline\n     */\n    constructor(_engine, name) {\n        this._engine = _engine;\n        /**\n         * Gets the unique id of the post process rendering pipeline\n         */\n        this.uniqueId = UniqueIdGenerator.UniqueId;\n        this._name = name;\n        this._renderEffects = {};\n        this._renderEffectsForIsolatedPass = new Array();\n        this._cameras = [];\n    }\n    /**\n     * Gets the class name\n     * @returns \"PostProcessRenderPipeline\"\n     */\n    getClassName() {\n        return \"PostProcessRenderPipeline\";\n    }\n    /**\n     * If all the render effects in the pipeline are supported\n     */\n    get isSupported() {\n        for (const renderEffectName in this._renderEffects) {\n            if (Object.prototype.hasOwnProperty.call(this._renderEffects, renderEffectName)) {\n                if (!this._renderEffects[renderEffectName].isSupported) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * Adds an effect to the pipeline\n     * @param renderEffect the effect to add\n     */\n    addEffect(renderEffect) {\n        this._renderEffects[renderEffect._name] = renderEffect;\n    }\n    // private\n    /** @internal */\n    _rebuild() { }\n    /**\n     * @internal\n     */\n    _enableEffect(renderEffectName, cameras) {\n        const renderEffects = this._renderEffects[renderEffectName];\n        if (!renderEffects) {\n            return;\n        }\n        renderEffects._enable(Tools.MakeArray(cameras || this._cameras));\n    }\n    /**\n     * @internal\n     */\n    _disableEffect(renderEffectName, cameras) {\n        const renderEffects = this._renderEffects[renderEffectName];\n        if (!renderEffects) {\n            return;\n        }\n        renderEffects._disable(Tools.MakeArray(cameras || this._cameras));\n    }\n    /**\n     * @internal\n     */\n    _attachCameras(cameras, unique) {\n        const cams = Tools.MakeArray(cameras || this._cameras);\n        if (!cams) {\n            return;\n        }\n        const indicesToDelete = [];\n        let i;\n        for (i = 0; i < cams.length; i++) {\n            const camera = cams[i];\n            if (!camera) {\n                continue;\n            }\n            if (this._cameras.indexOf(camera) === -1) {\n                this._cameras.push(camera);\n            }\n            else if (unique) {\n                indicesToDelete.push(i);\n            }\n        }\n        for (i = 0; i < indicesToDelete.length; i++) {\n            cams.splice(indicesToDelete[i], 1);\n        }\n        for (const renderEffectName in this._renderEffects) {\n            if (Object.prototype.hasOwnProperty.call(this._renderEffects, renderEffectName)) {\n                this._renderEffects[renderEffectName]._attachCameras(cams);\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    _detachCameras(cameras) {\n        const cams = Tools.MakeArray(cameras || this._cameras);\n        if (!cams) {\n            return;\n        }\n        for (const renderEffectName in this._renderEffects) {\n            if (Object.prototype.hasOwnProperty.call(this._renderEffects, renderEffectName)) {\n                this._renderEffects[renderEffectName]._detachCameras(cams);\n            }\n        }\n        for (let i = 0; i < cams.length; i++) {\n            this._cameras.splice(this._cameras.indexOf(cams[i]), 1);\n        }\n    }\n    /** @internal */\n    _update() {\n        for (const renderEffectName in this._renderEffects) {\n            if (Object.prototype.hasOwnProperty.call(this._renderEffects, renderEffectName)) {\n                this._renderEffects[renderEffectName]._update();\n            }\n        }\n        for (let i = 0; i < this._cameras.length; i++) {\n            if (!this._cameras[i]) {\n                continue;\n            }\n            const cameraName = this._cameras[i].name;\n            if (this._renderEffectsForIsolatedPass[cameraName]) {\n                this._renderEffectsForIsolatedPass[cameraName]._update();\n            }\n        }\n    }\n    /** @internal */\n    _reset() {\n        this._renderEffects = {};\n        this._renderEffectsForIsolatedPass = new Array();\n    }\n    _enableMSAAOnFirstPostProcess(sampleCount) {\n        if (!this._engine._features.supportMSAA) {\n            return false;\n        }\n        // Set samples of the very first post process to 4 to enable native anti-aliasing in browsers that support webGL 2.0 (See: https://github.com/BabylonJS/Babylon.js/issues/3754)\n        const effectKeys = Object.keys(this._renderEffects);\n        if (effectKeys.length > 0) {\n            const postProcesses = this._renderEffects[effectKeys[0]].getPostProcesses();\n            if (postProcesses) {\n                postProcesses[0].samples = sampleCount;\n            }\n        }\n        return true;\n    }\n    /**\n     * Ensures that all post processes in the pipeline are the correct size according to the\n     * the viewport's required size\n     */\n    _adaptPostProcessesToViewPort() {\n        const effectKeys = Object.keys(this._renderEffects);\n        for (const effectKey of effectKeys) {\n            const postProcesses = this._renderEffects[effectKey].getPostProcesses();\n            if (postProcesses) {\n                for (const postProcess of postProcesses) {\n                    postProcess.adaptScaleToCurrentViewport = true;\n                }\n            }\n        }\n    }\n    /**\n     * Sets the required values to the prepass renderer.\n     * @param prePassRenderer defines the prepass renderer to setup.\n     * @returns true if the pre pass is needed.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setPrePassRenderer(prePassRenderer) {\n        // Do Nothing by default\n        return false;\n    }\n    /**\n     * Disposes of the pipeline\n     */\n    dispose() {\n        // Must be implemented by children\n    }\n}\n__decorate([\n    serialize()\n], PostProcessRenderPipeline.prototype, \"_name\", void 0);\n//# sourceMappingURL=postProcessRenderPipeline.js.map","import { Tools } from \"../../Misc/tools\";\n/**\n * This represents a set of one or more post processes in Babylon.\n * A post process can be used to apply a shader to a texture after it is rendered.\n * @example https://doc.babylonjs.com/features/featuresDeepDive/postProcesses/postProcessRenderPipeline\n */\nexport class PostProcessRenderEffect {\n    /**\n     * Instantiates a post process render effect.\n     * A post process can be used to apply a shader to a texture after it is rendered.\n     * @param engine The engine the effect is tied to\n     * @param name The name of the effect\n     * @param getPostProcesses A function that returns a set of post processes which the effect will run in order to be run.\n     * @param singleInstance False if this post process can be run on multiple cameras. (default: true)\n     */\n    constructor(engine, name, getPostProcesses, singleInstance = true) {\n        this._name = name;\n        this._singleInstance = singleInstance;\n        this._getPostProcesses = getPostProcesses;\n        this._cameras = {};\n        this._indicesForCamera = {};\n        this._postProcesses = {};\n    }\n    /**\n     * Checks if all the post processes in the effect are supported.\n     */\n    get isSupported() {\n        for (const index in this._postProcesses) {\n            if (Object.prototype.hasOwnProperty.call(this._postProcesses, index)) {\n                const pps = this._postProcesses[index];\n                for (let ppIndex = 0; ppIndex < pps.length; ppIndex++) {\n                    if (!pps[ppIndex].isSupported) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * Updates the current state of the effect\n     * @internal\n     */\n    _update() { }\n    /**\n     * Attaches the effect on cameras\n     * @param cameras The camera to attach to.\n     * @internal\n     */\n    _attachCameras(cameras) {\n        let cameraKey;\n        const cams = Tools.MakeArray(cameras || this._cameras);\n        if (!cams) {\n            return;\n        }\n        for (let i = 0; i < cams.length; i++) {\n            const camera = cams[i];\n            if (!camera) {\n                continue;\n            }\n            const cameraName = camera.name;\n            if (this._singleInstance) {\n                cameraKey = 0;\n            }\n            else {\n                cameraKey = cameraName;\n            }\n            if (!this._postProcesses[cameraKey]) {\n                const postProcess = this._getPostProcesses();\n                if (postProcess) {\n                    this._postProcesses[cameraKey] = Array.isArray(postProcess) ? postProcess : [postProcess];\n                }\n            }\n            if (!this._indicesForCamera[cameraName]) {\n                this._indicesForCamera[cameraName] = [];\n            }\n            const pps = this._postProcesses[cameraKey];\n            for (const postProcess of pps) {\n                const index = camera.attachPostProcess(postProcess);\n                this._indicesForCamera[cameraName].push(index);\n            }\n            if (!this._cameras[cameraName]) {\n                this._cameras[cameraName] = camera;\n            }\n        }\n    }\n    /**\n     * Detaches the effect on cameras\n     * @param cameras The camera to detach from.\n     * @internal\n     */\n    _detachCameras(cameras) {\n        const cams = Tools.MakeArray(cameras || this._cameras);\n        if (!cams) {\n            return;\n        }\n        for (let i = 0; i < cams.length; i++) {\n            const camera = cams[i];\n            const cameraName = camera.name;\n            const postProcesses = this._postProcesses[this._singleInstance ? 0 : cameraName];\n            if (postProcesses) {\n                for (const postProcess of postProcesses) {\n                    camera.detachPostProcess(postProcess);\n                }\n            }\n            if (this._cameras[cameraName]) {\n                this._cameras[cameraName] = null;\n            }\n            delete this._indicesForCamera[cameraName];\n        }\n    }\n    /**\n     * Enables the effect on given cameras\n     * @param cameras The camera to enable.\n     * @internal\n     */\n    _enable(cameras) {\n        const cams = Tools.MakeArray(cameras || this._cameras);\n        if (!cams) {\n            return;\n        }\n        for (let i = 0; i < cams.length; i++) {\n            const camera = cams[i];\n            const cameraName = camera.name;\n            const cameraKey = this._singleInstance ? 0 : cameraName;\n            for (let j = 0; j < this._indicesForCamera[cameraName].length; j++) {\n                const index = this._indicesForCamera[cameraName][j];\n                const postProcess = camera._postProcesses[index];\n                if (postProcess === undefined || postProcess === null) {\n                    cams[i].attachPostProcess(this._postProcesses[cameraKey][j], index);\n                }\n            }\n        }\n    }\n    /**\n     * Disables the effect on the given cameras\n     * @param cameras The camera to disable.\n     * @internal\n     */\n    _disable(cameras) {\n        const cams = Tools.MakeArray(cameras || this._cameras);\n        if (!cams) {\n            return;\n        }\n        for (let i = 0; i < cams.length; i++) {\n            const camera = cams[i];\n            const cameraName = camera.name;\n            const pps = this._postProcesses[this._singleInstance ? 0 : cameraName];\n            for (const postProcess of pps) {\n                camera.detachPostProcess(postProcess);\n            }\n        }\n    }\n    /**\n     * Gets a list of the post processes contained in the effect.\n     * @param camera The camera to get the post processes on.\n     * @returns The list of the post processes in the effect.\n     */\n    getPostProcesses(camera) {\n        if (this._singleInstance) {\n            return this._postProcesses[0];\n        }\n        else {\n            if (!camera) {\n                return null;\n            }\n            return this._postProcesses[camera.name];\n        }\n    }\n}\n//# sourceMappingURL=postProcessRenderEffect.js.map"],"names":[],"mappings":";;AAIA;AACA;AACA;AACA;AACO,MAAM,yBAAyB,CAAC;AACvC;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK;AACzB;AACA;AACA,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,QAAQ;AAC5B;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE;AAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B;AACA;AACA;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ;AAClD,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI;AACzB,QAAQ,IAAI,CAAC,cAAc,GAAG,EAAE;AAChC,QAAQ,IAAI,CAAC,6BAA6B,GAAG,IAAI,KAAK,EAAE;AACxD,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,2BAA2B;AAC1C;AACA;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,KAAK,MAAM,gBAAgB,IAAI,IAAI,CAAC,cAAc,EAAE;AAC5D,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,gBAAgB,CAAC,EAAE;AAC7F,gBAAgB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,WAAW,EAAE;AACxE,oBAAoB,OAAO,KAAK;AAChC;AACA;AACA;AACA,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,YAAY,EAAE;AAC5B,QAAQ,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,YAAY;AAC9D;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf;AACA;AACA;AACA,IAAI,aAAa,CAAC,gBAAgB,EAAE,OAAO,EAAE;AAC7C,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC;AACnE,QAAQ,IAAI,CAAC,aAAa,EAAE;AAC5B,YAAY;AACZ;AACA,QAAQ,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxE;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,gBAAgB,EAAE,OAAO,EAAE;AAC9C,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC;AACnE,QAAQ,IAAI,CAAC,aAAa,EAAE;AAC5B,YAAY;AACZ;AACA,QAAQ,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzE;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,OAAO,EAAE,MAAM,EAAE;AACpC,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;AAC9D,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY;AACZ;AACA,QAAQ,MAAM,eAAe,GAAG,EAAE;AAClC,QAAQ,IAAI,CAAC;AACb,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;AAClC,YAAY,IAAI,CAAC,MAAM,EAAE;AACzB,gBAAgB;AAChB;AACA,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE;AACtD,gBAAgB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AAC1C;AACA,iBAAiB,IAAI,MAAM,EAAE;AAC7B,gBAAgB,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AACvC;AACA;AACA,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrD,YAAY,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAC9C;AACA,QAAQ,KAAK,MAAM,gBAAgB,IAAI,IAAI,CAAC,cAAc,EAAE;AAC5D,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,gBAAgB,CAAC,EAAE;AAC7F,gBAAgB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;AAC9D,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY;AACZ;AACA,QAAQ,KAAK,MAAM,gBAAgB,IAAI,IAAI,CAAC,cAAc,EAAE;AAC5D,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,gBAAgB,CAAC,EAAE;AAC7F,gBAAgB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC;AAC1E;AACA;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACnE;AACA;AACA;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,KAAK,MAAM,gBAAgB,IAAI,IAAI,CAAC,cAAc,EAAE;AAC5D,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,gBAAgB,CAAC,EAAE;AAC7F,gBAAgB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,OAAO,EAAE;AAC/D;AACA;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvD,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;AACnC,gBAAgB;AAChB;AACA,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI;AACpD,YAAY,IAAI,IAAI,CAAC,6BAA6B,CAAC,UAAU,CAAC,EAAE;AAChE,gBAAgB,IAAI,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE;AACxE;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,CAAC,cAAc,GAAG,EAAE;AAChC,QAAQ,IAAI,CAAC,6BAA6B,GAAG,IAAI,KAAK,EAAE;AACxD;AACA,IAAI,6BAA6B,CAAC,WAAW,EAAE;AAC/C,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;AACjD,YAAY,OAAO,KAAK;AACxB;AACA;AACA,QAAQ,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;AAC3D,QAAQ,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;AACnC,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;AACvF,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,WAAW;AACtD;AACA;AACA,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,6BAA6B,GAAG;AACpC,QAAQ,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;AAC3D,QAAQ,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;AAC5C,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE;AACnF,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,KAAK,MAAM,WAAW,IAAI,aAAa,EAAE;AACzD,oBAAoB,WAAW,CAAC,2BAA2B,GAAG,IAAI;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,CAAC,eAAe,EAAE;AACxC;AACA,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG;AACd;AACA;AACA;AACA,UAAU,CAAC;AACX,IAAI,SAAS;AACb,CAAC,EAAE,yBAAyB,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC;;AChNxD;AACA;AACA;AACA;AACA;AACO,MAAM,uBAAuB,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,gBAAgB,EAAE,cAAc,GAAG,IAAI,EAAE;AACvE,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI;AACzB,QAAQ,IAAI,CAAC,eAAe,GAAG,cAAc;AAC7C,QAAQ,IAAI,CAAC,iBAAiB,GAAG,gBAAgB;AACjD,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE;AAC1B,QAAQ,IAAI,CAAC,iBAAiB,GAAG,EAAE;AACnC,QAAQ,IAAI,CAAC,cAAc,GAAG,EAAE;AAChC;AACA;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,cAAc,EAAE;AACjD,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,EAAE;AAClF,gBAAgB,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AACtD,gBAAgB,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;AACvE,oBAAoB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE;AACnD,wBAAwB,OAAO,KAAK;AACpC;AACA;AACA;AACA;AACA,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG;AACd;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,IAAI,SAAS;AACrB,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;AAC9D,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY;AACZ;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;AAClC,YAAY,IAAI,CAAC,MAAM,EAAE;AACzB,gBAAgB;AAChB;AACA,YAAY,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI;AAC1C,YAAY,IAAI,IAAI,CAAC,eAAe,EAAE;AACtC,gBAAgB,SAAS,GAAG,CAAC;AAC7B;AACA,iBAAiB;AACjB,gBAAgB,SAAS,GAAG,UAAU;AACtC;AACA,YAAY,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AACjD,gBAAgB,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE;AAC5D,gBAAgB,IAAI,WAAW,EAAE;AACjC,oBAAoB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW,GAAG,CAAC,WAAW,CAAC;AAC7G;AACA;AACA,YAAY,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE;AACrD,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,EAAE;AACvD;AACA,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;AACtD,YAAY,KAAK,MAAM,WAAW,IAAI,GAAG,EAAE;AAC3C,gBAAgB,MAAM,KAAK,GAAG,MAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC;AACnE,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;AAC9D;AACA,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC5C,gBAAgB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,MAAM;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;AAC9D,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY;AACZ;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;AAClC,YAAY,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI;AAC1C,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,UAAU,CAAC;AAC5F,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,KAAK,MAAM,WAAW,IAAI,aAAa,EAAE;AACzD,oBAAoB,MAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC;AACzD;AACA;AACA,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC3C,gBAAgB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI;AAChD;AACA,YAAY,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,OAAO,EAAE;AACrB,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;AAC9D,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY;AACZ;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;AAClC,YAAY,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI;AAC1C,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,UAAU;AACnE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChF,gBAAgB,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACnE,gBAAgB,MAAM,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC;AAChE,gBAAgB,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;AACvE,oBAAoB,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,OAAO,EAAE;AACtB,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC;AAC9D,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY;AACZ;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;AAClC,YAAY,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI;AAC1C,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,UAAU,CAAC;AAClF,YAAY,KAAK,MAAM,WAAW,IAAI,GAAG,EAAE;AAC3C,gBAAgB,MAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,MAAM,EAAE;AAC7B,QAAQ,IAAI,IAAI,CAAC,eAAe,EAAE;AAClC,YAAY,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;AACzC;AACA,aAAa;AACb,YAAY,IAAI,CAAC,MAAM,EAAE;AACzB,gBAAgB,OAAO,IAAI;AAC3B;AACA,YAAY,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC;AACnD;AACA;AACA;;;;"}