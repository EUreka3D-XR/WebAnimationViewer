{"version":3,"file":"KHR_materials_iridescence-D1vccbzP.esm.js","sources":["../../../../../dev/loaders/dist/glTF/2.0/Extensions/KHR_materials_iridescence.js"],"sourcesContent":["import { GLTFLoader } from \"../glTFLoader\";\nimport { registerGLTFExtension, unregisterGLTFExtension } from \"../glTFLoaderExtensionRegistry\";\nconst NAME = \"KHR_materials_iridescence\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_iridescence/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class KHR_materials_iridescence {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 195;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return GLTFLoader.LoadExtensionAsync(context, material, this.name, async (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadIridescencePropertiesAsync(extensionContext, extension, babylonMaterial));\n            // eslint-disable-next-line github/no-then\n            return await Promise.all(promises).then(() => { });\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/promise-function-async, no-restricted-syntax\n    _loadIridescencePropertiesAsync(context, properties, babylonMaterial) {\n        const adapter = this._loader._getOrCreateMaterialAdapter(babylonMaterial);\n        const promises = new Array();\n        // Set non-texture properties immediately\n        adapter.thinFilmWeight = properties.iridescenceFactor ?? 0;\n        adapter.thinFilmIor = properties.iridescenceIor ?? properties.iridescenceIOR ?? 1.3;\n        adapter.thinFilmThicknessMinimum = properties.iridescenceThicknessMinimum ?? 100;\n        adapter.thinFilmThicknessMaximum = properties.iridescenceThicknessMaximum ?? 400;\n        // Load textures\n        if (properties.iridescenceTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/iridescenceTexture`, properties.iridescenceTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Iridescence)`;\n                adapter.thinFilmWeightTexture = texture;\n            }));\n        }\n        if (properties.iridescenceThicknessTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/iridescenceThicknessTexture`, properties.iridescenceThicknessTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Iridescence Thickness)`;\n                adapter.thinFilmThicknessTexture = texture;\n            }));\n        }\n        // eslint-disable-next-line github/no-then\n        return Promise.all(promises).then(() => { });\n    }\n}\nunregisterGLTFExtension(NAME);\nregisterGLTFExtension(NAME, true, (loader) => new KHR_materials_iridescence(loader));\n//# sourceMappingURL=KHR_materials_iridescence.js.map"],"names":[],"mappings":";;;;;;;;AAEA,MAAM,IAAI,GAAG,2BAA2B;AACxC;AACA;AACA;AACA;AACO,MAAM,yBAAyB,CAAC;AACvC;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB;AACA;AACA;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,GAAG;AACxB,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM;AAC7B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC;AACzD;AACA;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAI,2BAA2B,CAAC,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE;AACpE,QAAQ,OAAO,UAAU,CAAC,kBAAkB,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,gBAAgB,EAAE,SAAS,KAAK;AAClH,YAAY,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE;AACxC,YAAY,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,OAAO,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;AACvG,YAAY,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,gBAAgB,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;AAC7G;AACA,YAAY,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;AAC9D,SAAS,CAAC;AACV;AACA;AACA,IAAI,+BAA+B,CAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE;AAC1E,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,eAAe,CAAC;AACjF,QAAQ,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE;AACpC;AACA,QAAQ,OAAO,CAAC,cAAc,GAAG,UAAU,CAAC,iBAAiB,IAAI,CAAC;AAClE,QAAQ,OAAO,CAAC,WAAW,GAAG,UAAU,CAAC,cAAc,IAAI,UAAU,CAAC,cAAc,IAAI,GAAG;AAC3F,QAAQ,OAAO,CAAC,wBAAwB,GAAG,UAAU,CAAC,2BAA2B,IAAI,GAAG;AACxF,QAAQ,OAAO,CAAC,wBAAwB,GAAG,UAAU,CAAC,2BAA2B,IAAI,GAAG;AACxF;AACA,QAAQ,IAAI,UAAU,CAAC,kBAAkB,EAAE;AAC3C,YAAY,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,EAAE,OAAO,CAAC,mBAAmB,CAAC,EAAE,UAAU,CAAC,kBAAkB,EAAE,CAAC,OAAO,KAAK;AACzI,gBAAgB,OAAO,CAAC,IAAI,GAAG,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC;AACtE,gBAAgB,OAAO,CAAC,qBAAqB,GAAG,OAAO;AACvD,aAAa,CAAC,CAAC;AACf;AACA,QAAQ,IAAI,UAAU,CAAC,2BAA2B,EAAE;AACpD,YAAY,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,EAAE,OAAO,CAAC,4BAA4B,CAAC,EAAE,UAAU,CAAC,2BAA2B,EAAE,CAAC,OAAO,KAAK;AAC3J,gBAAgB,OAAO,CAAC,IAAI,GAAG,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,wBAAwB,CAAC;AAChF,gBAAgB,OAAO,CAAC,wBAAwB,GAAG,OAAO;AAC1D,aAAa,CAAC,CAAC;AACf;AACA;AACA,QAAQ,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;AACpD;AACA;AACA,uBAAuB,CAAC,IAAI,CAAC;AAC7B,qBAAqB,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,MAAM,KAAK,IAAI,yBAAyB,CAAC,MAAM,CAAC,CAAC;;;;"}