import{aW as e,bK as o,bJ as r}from"./index-BeBPThKX.esm.min.js";import{GLTFLoader as s}from"./glTFLoader-ASl42hNE.esm.min.js";import"./bone-4zSTwM2L.esm.min.js";import"./skeleton-BM6jc2S2.esm.min.js";import"./rawTexture-OHFtV4yv.esm.min.js";import"./assetContainer-C4iCgc7c.esm.min.js";import"./objectModelMapping-C_2yKgOV.esm.min.js";const t="KHR_materials_unlit";class a{constructor(e){this.name=t,this.order=210,this._loader=e,this.enabled=this._loader.isExtensionUsed(t)}dispose(){this._loader=null}loadMaterialPropertiesAsync(e,o,r){return s.LoadExtensionAsync(e,o,this.name,(async()=>await this._loadUnlitPropertiesAsync(e,o,r)))}_loadUnlitPropertiesAsync(o,r,s){const t=this._loader._getOrCreateMaterialAdapter(s),a=new Array,i=r.pbrMetallicRoughness;return i&&(i.baseColorFactor&&(t.baseColor=e.FromArray(i.baseColorFactor),t.geometryOpacity=i.baseColorFactor[3]),i.baseColorTexture&&a.push(this._loader.loadTextureInfoAsync(`${o}/baseColorTexture`,i.baseColorTexture,(e=>{e.name=`${s.name} (Base Color)`,t.baseColorTexture=e})))),t.isUnlit=!0,r.doubleSided&&(t.backFaceCulling=!1,t.twoSidedLighting=!0),this._loader.loadMaterialAlphaProperties(o,r,s),Promise.all(a).then((()=>{}))}}o(t),r(t,!0,(e=>new a(e)));export{a as KHR_materials_unlit};
//# sourceMappingURL=KHR_materials_unlit-BVGGEqpf.esm.min.js.map
