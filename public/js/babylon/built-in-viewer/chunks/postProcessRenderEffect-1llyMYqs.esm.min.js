import{U as s,p as e,_ as t,s as r}from"./index-BeBPThKX.esm.min.js";class a{get name(){return this._name}get cameras(){return this._cameras}get engine(){return this._engine}constructor(e,t){this._engine=e,this.uniqueId=s.UniqueId,this._name=t,this._renderEffects={},this._renderEffectsForIsolatedPass=new Array,this._cameras=[]}getClassName(){return"PostProcessRenderPipeline"}get isSupported(){for(const s in this._renderEffects)if(Object.prototype.hasOwnProperty.call(this._renderEffects,s)&&!this._renderEffects[s].isSupported)return!1;return!0}addEffect(s){this._renderEffects[s._name]=s}_rebuild(){}_enableEffect(s,t){const r=this._renderEffects[s];r&&r._enable(e.MakeArray(t||this._cameras))}_disableEffect(s,t){const r=this._renderEffects[s];r&&r._disable(e.MakeArray(t||this._cameras))}_attachCameras(s,t){const r=e.MakeArray(s||this._cameras);if(!r)return;const a=[];let n;for(n=0;n<r.length;n++){const s=r[n];s&&(-1===this._cameras.indexOf(s)?this._cameras.push(s):t&&a.push(n))}for(n=0;n<a.length;n++)r.splice(a[n],1);for(const s in this._renderEffects)Object.prototype.hasOwnProperty.call(this._renderEffects,s)&&this._renderEffects[s]._attachCameras(r)}_detachCameras(s){const t=e.MakeArray(s||this._cameras);if(t){for(const s in this._renderEffects)Object.prototype.hasOwnProperty.call(this._renderEffects,s)&&this._renderEffects[s]._detachCameras(t);for(let s=0;s<t.length;s++)this._cameras.splice(this._cameras.indexOf(t[s]),1)}}_update(){for(const s in this._renderEffects)Object.prototype.hasOwnProperty.call(this._renderEffects,s)&&this._renderEffects[s]._update();for(let s=0;s<this._cameras.length;s++){if(!this._cameras[s])continue;const e=this._cameras[s].name;this._renderEffectsForIsolatedPass[e]&&this._renderEffectsForIsolatedPass[e]._update()}}_reset(){this._renderEffects={},this._renderEffectsForIsolatedPass=new Array}_enableMSAAOnFirstPostProcess(s){if(!this._engine._features.supportMSAA)return!1;const e=Object.keys(this._renderEffects);if(e.length>0){const t=this._renderEffects[e[0]].getPostProcesses();t&&(t[0].samples=s)}return!0}_adaptPostProcessesToViewPort(){const s=Object.keys(this._renderEffects);for(const e of s){const s=this._renderEffects[e].getPostProcesses();if(s)for(const e of s)e.adaptScaleToCurrentViewport=!0}}setPrePassRenderer(s){return!1}dispose(){}}t([r()],a.prototype,"_name",void 0);class n{constructor(s,e,t,r=!0){this._name=e,this._singleInstance=r,this._getPostProcesses=t,this._cameras={},this._indicesForCamera={},this._postProcesses={}}get isSupported(){for(const s in this._postProcesses)if(Object.prototype.hasOwnProperty.call(this._postProcesses,s)){const e=this._postProcesses[s];for(let s=0;s<e.length;s++)if(!e[s].isSupported)return!1}return!0}_update(){}_attachCameras(s){let t;const r=e.MakeArray(s||this._cameras);if(r)for(let s=0;s<r.length;s++){const e=r[s];if(!e)continue;const a=e.name;if(t=this._singleInstance?0:a,!this._postProcesses[t]){const s=this._getPostProcesses();s&&(this._postProcesses[t]=Array.isArray(s)?s:[s])}this._indicesForCamera[a]||(this._indicesForCamera[a]=[]);const n=this._postProcesses[t];for(const s of n){const t=e.attachPostProcess(s);this._indicesForCamera[a].push(t)}this._cameras[a]||(this._cameras[a]=e)}}_detachCameras(s){const t=e.MakeArray(s||this._cameras);if(t)for(let s=0;s<t.length;s++){const e=t[s],r=e.name,a=this._postProcesses[this._singleInstance?0:r];if(a)for(const s of a)e.detachPostProcess(s);this._cameras[r]&&(this._cameras[r]=null),delete this._indicesForCamera[r]}}_enable(s){const t=e.MakeArray(s||this._cameras);if(t)for(let s=0;s<t.length;s++){const e=t[s],r=e.name,a=this._singleInstance?0:r;for(let n=0;n<this._indicesForCamera[r].length;n++){const o=this._indicesForCamera[r][n],c=e._postProcesses[o];null==c&&t[s].attachPostProcess(this._postProcesses[a][n],o)}}}_disable(s){const t=e.MakeArray(s||this._cameras);if(t)for(let s=0;s<t.length;s++){const e=t[s],r=e.name,a=this._postProcesses[this._singleInstance?0:r];for(const s of a)e.detachPostProcess(s)}}getPostProcesses(s){return this._singleInstance?this._postProcesses[0]:s?this._postProcesses[s.name]:null}}export{a as P,n as a};
//# sourceMappingURL=postProcessRenderEffect-1llyMYqs.esm.min.js.map
