import{aW as e,aX as t,aY as i,aZ as s,M as r,a_ as a,a$ as n,b0 as o,b1 as l,b2 as u,C as h,b3 as T,b4 as p,b5 as d,b6 as f,b7 as E,a6 as _,b8 as m,b9 as c,G as A,ba as S,bb as x,a1 as R,bc as P,I,bd as b,Z as L,be as C,a2 as v,bf as g,bg as F,X as M,bh as O,k as N,a4 as y,Y as D,a3 as U,S as B,H,bi as k,a0 as G,bj as V,bk as X,A as w,_ as Y,bl as W,D as z,bm as j,s as Z,bn as K,e as Q}from"./index-BeBPThKX.esm.min.js";const J={effect:null,subMesh:null};class $ extends(X(w)){}class q extends(V($)){constructor(e){super(e),this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.USE_VERTEX_PULLING=!1,this.CLUSTLIGHT_SLICES=0,this.CLUSTLIGHT_BATCH=0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}}class ee extends(k(G)){}class te extends ee{get isPrePassCapable(){return!this.disableDepthWrite}get canRenderToMRT(){return!0}constructor(r,a,n=!1){super(r,a,void 0,n||te.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new e(0,0,0),this.diffuseColor=new e(1,1,1),this.specularColor=new e(1,1,1),this.emissiveColor=new e(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new t(16),this._globalAmbientColor=new e(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new i(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new s,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),te.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),te.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(te.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(te.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"StandardMaterial"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===r.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.hasAlpha&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==r.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.hasAlpha||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(e,t,i=!1){this._uniformBufferLayoutBuilt||this.buildUniformLayout();const r=t._drawWrapper;if(r.effect&&this.isFrozen&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),t.materialDefines=new q(this._eventInfo.defineNames));const C=this.getScene(),v=t.materialDefines;if(this._isReadyForSubMesh(t))return!0;const g=C.getEngine();v._needNormals=a(C,e,v,!0,this._maxSimultaneousLights,this._disableLighting),n(C,v);const F=this.needAlphaBlendingForMesh(e)&&this.getScene().useOrderIndependentTransparency;if(o(C,v,this.canRenderToMRT&&!F),l(C,v,F),u.PrepareDefines(g.currentRenderPassId,e,v),v._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,v._needUVs=!1;for(let e=1;e<=h.MAX_SUPPORTED_UV_SETS;++e)v["MAINUV"+e]=!1;if(C.texturesEnabled){if(v.DIFFUSEDIRECTUV=0,v.BUMPDIRECTUV=0,v.AMBIENTDIRECTUV=0,v.OPACITYDIRECTUV=0,v.EMISSIVEDIRECTUV=0,v.SPECULARDIRECTUV=0,v.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&te.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;T(this._diffuseTexture,v,"DIFFUSE")}else v.DIFFUSE=!1;if(this._ambientTexture&&te.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;T(this._ambientTexture,v,"AMBIENT")}else v.AMBIENT=!1;if(this._opacityTexture&&te.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;T(this._opacityTexture,v,"OPACITY"),v.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else v.OPACITY=!1;if(this._reflectionTexture&&te.ReflectionTextureEnabled?(v.ROUGHNESS=this._roughness>0,v.REFLECTIONOVERALPHA=this._useReflectionOverAlpha):(v.ROUGHNESS=!1,v.REFLECTIONOVERALPHA=!1),!p(C,this._reflectionTexture,v))return!1;if(this._emissiveTexture&&te.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;T(this._emissiveTexture,v,"EMISSIVE")}else v.EMISSIVE=!1;if(this._lightmapTexture&&te.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;T(this._lightmapTexture,v,"LIGHTMAP"),v.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,v.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else v.LIGHTMAP=!1;if(this._specularTexture&&te.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;T(this._specularTexture,v,"SPECULAR"),v.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else v.SPECULAR=!1;if(C.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&te.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;T(this._bumpTexture,v,"BUMP"),v.PARALLAX=this._useParallax,v.PARALLAX_RHS=C.useRightHandedSystem,v.PARALLAXOCCLUSION=this._useParallaxOcclusion,v.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else v.BUMP=!1,v.PARALLAX=!1,v.PARALLAX_RHS=!1,v.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&te.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;v._needUVs=!0,v.REFRACTION=!0,v.REFRACTIONMAP_3D=this._refractionTexture.isCube,v.RGBDREFRACTION=this._refractionTexture.isRGBD,v.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else v.REFRACTION=!1;v.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else v.DIFFUSE=!1,v.AMBIENT=!1,v.OPACITY=!1,v.REFLECTION=!1,v.EMISSIVE=!1,v.LIGHTMAP=!1,v.BUMP=!1,v.REFRACTION=!1;v.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),v.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,v.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,v.SPECULAROVERALPHA=this._useSpecularOverAlpha,v.PREMULTIPLYALPHA=this.alphaMode===h.ALPHA_PREMULTIPLIED||this.alphaMode===h.ALPHA_PREMULTIPLIED_PORTERDUFF,v.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,v.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(e)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=v,this._eventInfo.subMesh=t,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(v._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(v),v.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,v.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(v._areFresnelDirty&&(te.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(v.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,v.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,v.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,v.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,v.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,v.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,v._needNormals=!0,v.FRESNEL=!0):v.FRESNEL=!1),v.AREALIGHTUSED||v.CLUSTLIGHT_BATCH)for(let t=0;t<e.lightSources.length;t++)if(!e.lightSources[t]._isReady())return!1;d(e,C,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(e),v,this._applyDecalMapAfterDetailMap,this._useVertexPulling,t.getRenderingMesh(),this._setVertexOutputInvariant),f(C,g,this,v,i,null,t.getRenderingMesh().hasThinInstances),this._eventInfo.defines=v,this._eventInfo.mesh=e,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),E(e,v,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let M=!1;if(v.isDirty){const i=v._areLightsDisposed;v.markAsProcessed();const r=new _;v.REFLECTION&&r.addFallback(0,"REFLECTION"),v.SPECULAR&&r.addFallback(0,"SPECULAR"),v.BUMP&&r.addFallback(0,"BUMP"),v.PARALLAX&&r.addFallback(1,"PARALLAX"),v.PARALLAX_RHS&&r.addFallback(1,"PARALLAX_RHS"),v.PARALLAXOCCLUSION&&r.addFallback(0,"PARALLAXOCCLUSION"),v.SPECULAROVERALPHA&&r.addFallback(0,"SPECULAROVERALPHA"),v.FOG&&r.addFallback(1,"FOG"),v.POINTSIZE&&r.addFallback(0,"POINTSIZE"),v.LOGARITHMICDEPTH&&r.addFallback(0,"LOGARITHMICDEPTH"),m(v,r,this._maxSimultaneousLights),v.SPECULARTERM&&r.addFallback(0,"SPECULARTERM"),v.DIFFUSEFRESNEL&&r.addFallback(1,"DIFFUSEFRESNEL"),v.OPACITYFRESNEL&&r.addFallback(2,"OPACITYFRESNEL"),v.REFLECTIONFRESNEL&&r.addFallback(3,"REFLECTIONFRESNEL"),v.EMISSIVEFRESNEL&&r.addFallback(4,"EMISSIVEFRESNEL"),v.FRESNEL&&r.addFallback(4,"FRESNEL"),v.MULTIVIEW&&r.addFallback(0,"MULTIVIEW");const a=[A.PositionKind];v.NORMAL&&a.push(A.NormalKind),v.TANGENT&&a.push(A.TangentKind);for(let e=1;e<=h.MAX_SUPPORTED_UV_SETS;++e)v["UV"+e]&&a.push(`uv${1===e?"":e}`);v.VERTEXCOLOR&&a.push(A.ColorKind),c(a,e,v,r),S(a,v),x(a,e,v),R(a,e,v);let n="default";const o=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],l=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"];P(o,l,!1);const T=["Material","Scene","Mesh"],p={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:v.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=r,this._eventInfo.fallbackRank=0,this._eventInfo.defines=v,this._eventInfo.uniforms=o,this._eventInfo.attributes=a,this._eventInfo.samplers=l,this._eventInfo.uniformBuffersNames=T,this._eventInfo.customCode=void 0,this._eventInfo.mesh=e,this._eventInfo.indexParameters=p,this._callbackPluginEventGeneric(128,this._eventInfo),u.AddUniformsAndSamplers(o,l),s.AddUniforms(o),I&&(I.PrepareUniforms(o,v),I.PrepareSamplers(l,v)),b({uniformsNames:o,uniformBuffersNames:T,samplers:l,defines:v,maxSimultaneousLights:this._maxSimultaneousLights}),L(o);const d={};this.customShaderNameResolve&&(n=this.customShaderNameResolve(n,o,T,l,v,a,d));const f=v.toString(),E=t.effect;let F=C.getEngine().createEffect(n,{attributes:a,uniformsNames:o,uniformBuffersNames:T,samplers:l,defines:f,fallbacks:r,onCompiled:this.onCompiled,onError:this.onError,indexParameters:p,processFinalCode:d.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:v.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([import("./default.vertex-BBxmBVv6.esm.min.js"),import("./default.fragment-CG8XDtod.esm.min.js")]):await Promise.all([import("./default.vertex-CqM673R_.esm.min.js"),import("./default.fragment-Cm7POFq1.esm.min.js")]),this._shadersLoaded=!0}},g);if(this._eventInfo.customCode=void 0,F)if(this._onEffectCreatedObservable&&(J.effect=F,J.subMesh=t,this._onEffectCreatedObservable.notifyObservers(J)),this.allowShaderHotSwapping&&E&&!F.isReady()){if(F=E,v.markAsUnprocessed(),M=this.isFrozen,i)return v._areLightsDisposed=!0,!1}else C.resetCachedMaterial(),t.setEffect(F,v,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(v._renderId=C.getRenderId(),r._wasPreviouslyReady=!M,r._wasPreviouslyUsingInstances=i,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const e=this._uniformBuffer;e.addUniform("diffuseLeftColor",4),e.addUniform("diffuseRightColor",4),e.addUniform("opacityParts",4),e.addUniform("reflectionLeftColor",4),e.addUniform("reflectionRightColor",4),e.addUniform("refractionLeftColor",4),e.addUniform("refractionRightColor",4),e.addUniform("emissiveLeftColor",4),e.addUniform("emissiveRightColor",4),e.addUniform("vDiffuseInfos",2),e.addUniform("vAmbientInfos",2),e.addUniform("vOpacityInfos",2),e.addUniform("vEmissiveInfos",2),e.addUniform("vLightmapInfos",2),e.addUniform("vSpecularInfos",2),e.addUniform("vBumpInfos",3),e.addUniform("diffuseMatrix",16),e.addUniform("ambientMatrix",16),e.addUniform("opacityMatrix",16),e.addUniform("emissiveMatrix",16),e.addUniform("lightmapMatrix",16),e.addUniform("specularMatrix",16),e.addUniform("bumpMatrix",16),e.addUniform("vTangentSpaceParams",2),e.addUniform("pointSize",1),e.addUniform("alphaCutOff",1),e.addUniform("refractionMatrix",16),e.addUniform("vRefractionInfos",4),e.addUniform("vRefractionPosition",3),e.addUniform("vRefractionSize",3),e.addUniform("vSpecularColor",4),e.addUniform("vEmissiveColor",3),e.addUniform("vDiffuseColor",4),e.addUniform("vAmbientColor",3),e.addUniform("cameraInfo",4),C(e,!1,!0),super.buildUniformLayout()}bindForSubMesh(t,i,s){const r=this.getScene(),a=s.materialDefines;if(!a)return;const n=s.effect;if(!n)return;this._activeEffect=n,i.getMeshUniformBuffer().bindToEffect(n,"Mesh"),i.transferToEffect(t),this._uniformBuffer.bindToEffect(n,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,r,i,t,this.isFrozen),u.Bind(r.getEngine().currentRenderPassId,this._activeEffect,i,t,this);const o=r.activeCamera;o?this._uniformBuffer.updateFloat4("cameraInfo",o.minZ,o.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=s,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),a.OBJECTSPACE_NORMALMAP&&(t.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const l=this._mustRebind(r,n,s,i.visibility);v(i,n);const h=this._uniformBuffer;if(l){if(this.bindViewProjection(n),!h.useUbo||!this.isFrozen||!h.isSync||s._drawWrapper._forceRebindOnNextCall){if(te.FresnelEnabled&&a.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(h.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),h.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&h.updateColor4("opacityParts",new e(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(h.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),h.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(h.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),h.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(h.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),h.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),r.texturesEnabled&&(this._diffuseTexture&&te.DiffuseTextureEnabled&&(h.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),g(this._diffuseTexture,h,"diffuse")),this._ambientTexture&&te.AmbientTextureEnabled&&(h.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),g(this._ambientTexture,h,"ambient")),this._opacityTexture&&te.OpacityTextureEnabled&&(h.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),g(this._opacityTexture,h,"opacity")),this._hasAlphaChannel()&&h.updateFloat("alphaCutOff",this.alphaCutOff),F(r,a,h,e.White(),this._reflectionTexture,!1,!1,!0,!1,!1,!1,this.roughness),this._reflectionTexture&&te.ReflectionTextureEnabled||h.updateFloat2("vReflectionInfos",0,this.roughness),this._emissiveTexture&&te.EmissiveTextureEnabled&&(h.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),g(this._emissiveTexture,h,"emissive")),this._lightmapTexture&&te.LightmapTextureEnabled&&(h.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),g(this._lightmapTexture,h,"lightmap")),this._specularTexture&&te.SpecularTextureEnabled&&(h.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),g(this._specularTexture,h,"specular")),this._bumpTexture&&r.getEngine().getCaps().standardDerivatives&&te.BumpTextureEnabled&&(h.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),g(this._bumpTexture,h,"bump"),r._mirroredCameraPosition?h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):h.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&te.RefractionTextureEnabled)){let e=1;if(this._refractionTexture.isCube||(h.updateMatrix("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(e=this._refractionTexture.depth)),h.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,e,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const e=this._refractionTexture;h.updateVector3("vRefractionPosition",e.boundingBoxPosition),h.updateVector3("vRefractionSize",e.boundingBoxSize)}}this.pointsCloud&&h.updateFloat("pointSize",this.pointSize),h.updateColor4("vSpecularColor",this.specularColor,this.specularPower),h.updateColor3("vEmissiveColor",te.EmissiveTextureEnabled?this.emissiveColor:e.BlackReadOnly),h.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),r.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),h.updateColor3("vAmbientColor",this._globalAmbientColor)}r.texturesEnabled&&(this._diffuseTexture&&te.DiffuseTextureEnabled&&n.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&te.AmbientTextureEnabled&&n.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&te.OpacityTextureEnabled&&n.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&te.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?n.setTexture("reflectionCubeSampler",this._reflectionTexture):n.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&te.EmissiveTextureEnabled&&n.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&te.LightmapTextureEnabled&&n.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&te.SpecularTextureEnabled&&n.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&r.getEngine().getCaps().standardDerivatives&&te.BumpTextureEnabled&&n.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&te.RefractionTextureEnabled&&(this._refractionTexture.isCube?n.setTexture("refractionCubeSampler",this._refractionTexture):n.setTexture("refraction2DSampler",this._refractionTexture))),this.getScene().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(i)&&this.getScene().depthPeelingRenderer.bind(n),this._eventInfo.subMesh=s,this._callbackPluginEventBindForSubMesh(this._eventInfo),M(n,this,r),this.bindEyePosition(n)}else r.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);!l&&this.isFrozen||(r.lightsEnabled&&!this._disableLighting&&O(r,i,n,a,this._maxSimultaneousLights),(r.fogEnabled&&i.applyFog&&r.fogMode!==N.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||i.receiveShadows||a.PREPASS||a.CLUSTLIGHT_BATCH)&&this.bindView(n),y(r,i,n),a.NUM_MORPH_INFLUENCERS&&D(i,n),a.BAKED_VERTEX_ANIMATION_TEXTURE&&i.bakedVertexAnimationManager?.bind(n,a.INSTANCES),this.useLogarithmicDepth&&U(a,n,r),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)),this._afterBind(i,this._activeEffect,s),h.update()}getAnimatables(){const e=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&e.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&e.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&e.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&e.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&e.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&e.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&e.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&e.push(this._refractionTexture),e}getActiveTextures(){const e=super.getActiveTextures();return this._diffuseTexture&&e.push(this._diffuseTexture),this._ambientTexture&&e.push(this._ambientTexture),this._opacityTexture&&e.push(this._opacityTexture),this._reflectionTexture&&e.push(this._reflectionTexture),this._emissiveTexture&&e.push(this._emissiveTexture),this._specularTexture&&e.push(this._specularTexture),this._bumpTexture&&e.push(this._bumpTexture),this._lightmapTexture&&e.push(this._lightmapTexture),this._refractionTexture&&e.push(this._refractionTexture),e}hasTexture(e){return!!super.hasTexture(e)||(this._diffuseTexture===e||(this._ambientTexture===e||(this._opacityTexture===e||(this._reflectionTexture===e||(this._emissiveTexture===e||(this._specularTexture===e||(this._bumpTexture===e||(this._lightmapTexture===e||this._refractionTexture===e))))))))}dispose(e,t){t&&(this._diffuseTexture?.dispose(),this._ambientTexture?.dispose(),this._opacityTexture?.dispose(),this._reflectionTexture?.dispose(),this._emissiveTexture?.dispose(),this._specularTexture?.dispose(),this._bumpTexture?.dispose(),this._lightmapTexture?.dispose(),this._refractionTexture?.dispose()),this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(e,t)}clone(e,t=!0,i=""){const s=B.Clone((()=>new te(e,this.getScene())),this,{cloneTexturesOnlyOnce:t});return s.name=e,s.id=e,this.stencil.copyTo(s.stencil),this._clonePlugins(s,i),s}static Parse(e,t,i){const s=B.Parse((()=>new te(e.name,t)),e,t,i);return e.stencil&&s.stencil.parse(e.stencil,t,i),r._ParsePlugins(e,s,t,i),s}static get DiffuseTextureEnabled(){return H.DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){H.DiffuseTextureEnabled=e}static get DetailTextureEnabled(){return H.DetailTextureEnabled}static set DetailTextureEnabled(e){H.DetailTextureEnabled=e}static get AmbientTextureEnabled(){return H.AmbientTextureEnabled}static set AmbientTextureEnabled(e){H.AmbientTextureEnabled=e}static get OpacityTextureEnabled(){return H.OpacityTextureEnabled}static set OpacityTextureEnabled(e){H.OpacityTextureEnabled=e}static get ReflectionTextureEnabled(){return H.ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){H.ReflectionTextureEnabled=e}static get EmissiveTextureEnabled(){return H.EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){H.EmissiveTextureEnabled=e}static get SpecularTextureEnabled(){return H.SpecularTextureEnabled}static set SpecularTextureEnabled(e){H.SpecularTextureEnabled=e}static get BumpTextureEnabled(){return H.BumpTextureEnabled}static set BumpTextureEnabled(e){H.BumpTextureEnabled=e}static get LightmapTextureEnabled(){return H.LightmapTextureEnabled}static set LightmapTextureEnabled(e){H.LightmapTextureEnabled=e}static get RefractionTextureEnabled(){return H.RefractionTextureEnabled}static set RefractionTextureEnabled(e){H.RefractionTextureEnabled=e}static get ColorGradingTextureEnabled(){return H.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){H.ColorGradingTextureEnabled=e}static get FresnelEnabled(){return H.FresnelEnabled}static set FresnelEnabled(e){H.FresnelEnabled=e}}te.ForceGLSL=!1,Y([W("diffuseTexture")],te.prototype,"_diffuseTexture",void 0),Y([z("_markAllSubMeshesAsTexturesAndMiscDirty")],te.prototype,"diffuseTexture",void 0),Y([W("ambientTexture")],te.prototype,"_ambientTexture",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"ambientTexture",void 0),Y([W("opacityTexture")],te.prototype,"_opacityTexture",void 0),Y([z("_markAllSubMeshesAsTexturesAndMiscDirty")],te.prototype,"opacityTexture",void 0),Y([W("reflectionTexture")],te.prototype,"_reflectionTexture",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"reflectionTexture",void 0),Y([W("emissiveTexture")],te.prototype,"_emissiveTexture",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"emissiveTexture",void 0),Y([W("specularTexture")],te.prototype,"_specularTexture",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"specularTexture",void 0),Y([W("bumpTexture")],te.prototype,"_bumpTexture",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"bumpTexture",void 0),Y([W("lightmapTexture")],te.prototype,"_lightmapTexture",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"lightmapTexture",void 0),Y([W("refractionTexture")],te.prototype,"_refractionTexture",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"refractionTexture",void 0),Y([j("ambient")],te.prototype,"ambientColor",void 0),Y([j("diffuse")],te.prototype,"diffuseColor",void 0),Y([j("specular")],te.prototype,"specularColor",void 0),Y([j("emissive")],te.prototype,"emissiveColor",void 0),Y([Z()],te.prototype,"specularPower",void 0),Y([Z("useAlphaFromDiffuseTexture")],te.prototype,"_useAlphaFromDiffuseTexture",void 0),Y([z("_markAllSubMeshesAsTexturesAndMiscDirty")],te.prototype,"useAlphaFromDiffuseTexture",void 0),Y([Z("useEmissiveAsIllumination")],te.prototype,"_useEmissiveAsIllumination",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"useEmissiveAsIllumination",void 0),Y([Z("linkEmissiveWithDiffuse")],te.prototype,"_linkEmissiveWithDiffuse",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"linkEmissiveWithDiffuse",void 0),Y([Z("useSpecularOverAlpha")],te.prototype,"_useSpecularOverAlpha",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"useSpecularOverAlpha",void 0),Y([Z("useReflectionOverAlpha")],te.prototype,"_useReflectionOverAlpha",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"useReflectionOverAlpha",void 0),Y([Z("disableLighting")],te.prototype,"_disableLighting",void 0),Y([z("_markAllSubMeshesAsLightsDirty")],te.prototype,"disableLighting",void 0),Y([Z("useObjectSpaceNormalMap")],te.prototype,"_useObjectSpaceNormalMap",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"useObjectSpaceNormalMap",void 0),Y([Z("useParallax")],te.prototype,"_useParallax",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"useParallax",void 0),Y([Z("useParallaxOcclusion")],te.prototype,"_useParallaxOcclusion",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"useParallaxOcclusion",void 0),Y([Z()],te.prototype,"parallaxScaleBias",void 0),Y([Z("roughness")],te.prototype,"_roughness",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"roughness",void 0),Y([Z()],te.prototype,"indexOfRefraction",void 0),Y([Z()],te.prototype,"invertRefractionY",void 0),Y([Z()],te.prototype,"alphaCutOff",void 0),Y([Z("useLightmapAsShadowmap")],te.prototype,"_useLightmapAsShadowmap",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"useLightmapAsShadowmap",void 0),Y([K("diffuseFresnelParameters")],te.prototype,"_diffuseFresnelParameters",void 0),Y([z("_markAllSubMeshesAsFresnelDirty")],te.prototype,"diffuseFresnelParameters",void 0),Y([K("opacityFresnelParameters")],te.prototype,"_opacityFresnelParameters",void 0),Y([z("_markAllSubMeshesAsFresnelAndMiscDirty")],te.prototype,"opacityFresnelParameters",void 0),Y([K("reflectionFresnelParameters")],te.prototype,"_reflectionFresnelParameters",void 0),Y([z("_markAllSubMeshesAsFresnelDirty")],te.prototype,"reflectionFresnelParameters",void 0),Y([K("refractionFresnelParameters")],te.prototype,"_refractionFresnelParameters",void 0),Y([z("_markAllSubMeshesAsFresnelDirty")],te.prototype,"refractionFresnelParameters",void 0),Y([K("emissiveFresnelParameters")],te.prototype,"_emissiveFresnelParameters",void 0),Y([z("_markAllSubMeshesAsFresnelDirty")],te.prototype,"emissiveFresnelParameters",void 0),Y([Z("useReflectionFresnelFromSpecular")],te.prototype,"_useReflectionFresnelFromSpecular",void 0),Y([z("_markAllSubMeshesAsFresnelDirty")],te.prototype,"useReflectionFresnelFromSpecular",void 0),Y([Z("useGlossinessFromSpecularMapAlpha")],te.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"useGlossinessFromSpecularMapAlpha",void 0),Y([Z("maxSimultaneousLights")],te.prototype,"_maxSimultaneousLights",void 0),Y([z("_markAllSubMeshesAsLightsDirty")],te.prototype,"maxSimultaneousLights",void 0),Y([Z("invertNormalMapX")],te.prototype,"_invertNormalMapX",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"invertNormalMapX",void 0),Y([Z("invertNormalMapY")],te.prototype,"_invertNormalMapY",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"invertNormalMapY",void 0),Y([Z("twoSidedLighting")],te.prototype,"_twoSidedLighting",void 0),Y([z("_markAllSubMeshesAsTexturesDirty")],te.prototype,"twoSidedLighting",void 0),Y([Z("applyDecalMapAfterDetailMap")],te.prototype,"_applyDecalMapAfterDetailMap",void 0),Y([z("_markAllSubMeshesAsMiscDirty")],te.prototype,"applyDecalMapAfterDetailMap",void 0),Q("BABYLON.StandardMaterial",te),N.DefaultMaterialFactory=e=>new te("default material",e);export{te as S};
//# sourceMappingURL=standardMaterial-DnuI_hxA.esm.min.js.map
