import{c6 as e,aW as s,bK as r,bJ as o}from"./index-BeBPThKX.esm.min.js";import{GLTFLoader as a}from"./glTFLoader-ASl42hNE.esm.min.js";import"./bone-4zSTwM2L.esm.min.js";import"./skeleton-BM6jc2S2.esm.min.js";import"./rawTexture-OHFtV4yv.esm.min.js";import"./assetContainer-C4iCgc7c.esm.min.js";import"./objectModelMapping-C_2yKgOV.esm.min.js";const t="KHR_materials_pbrSpecularGlossiness";class i{constructor(e){this.name=t,this.order=200,this._loader=e,this.enabled=this._loader.isExtensionUsed(t)}dispose(){this._loader=null}loadMaterialPropertiesAsync(e,s,r){return a.LoadExtensionAsync(e,s,this.name,(async(o,a)=>{const t=new Array;return t.push(this._loader.loadMaterialBasePropertiesAsync(e,s,r)),t.push(this._loadSpecularGlossinessPropertiesAsync(o,a,r)),this._loader.loadMaterialAlphaProperties(e,s,r),await Promise.all(t).then((()=>{}))}))}_loadSpecularGlossinessPropertiesAsync(r,o,a){if(!(a instanceof e))throw new Error(`${r}: Material type not supported`);const t=new Array;return a.metallic=null,a.roughness=null,o.diffuseFactor?(a.albedoColor=s.FromArray(o.diffuseFactor),a.alpha=o.diffuseFactor[3]):a.albedoColor=s.White(),a.reflectivityColor=o.specularFactor?s.FromArray(o.specularFactor):s.White(),a.microSurface=null==o.glossinessFactor?1:o.glossinessFactor,o.diffuseTexture&&t.push(this._loader.loadTextureInfoAsync(`${r}/diffuseTexture`,o.diffuseTexture,(e=>{e.name=`${a.name} (Diffuse)`,a.albedoTexture=e}))),o.specularGlossinessTexture&&(t.push(this._loader.loadTextureInfoAsync(`${r}/specularGlossinessTexture`,o.specularGlossinessTexture,(e=>{e.name=`${a.name} (Specular Glossiness)`,a.reflectivityTexture=e,a.reflectivityTexture.hasAlpha=!0}))),a.useMicroSurfaceFromReflectivityMapAlpha=!0),Promise.all(t).then((()=>{}))}}r(t),o(t,!0,(e=>new i(e)));export{i as KHR_materials_pbrSpecularGlossiness};
//# sourceMappingURL=KHR_materials_pbrSpecularGlossiness-gCeHmr-Q.esm.min.js.map
